{
  "resourceType": "Bundle",
  "id": "all-cms-cqm-bundle",
  "type": "transaction",
  "entry": [
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-adult-outpatient-encounters-FHIR",
        "status": "draft",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.526.3.1240"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzRkhJUiB2ZXJzaW9uICcxLjEuMDAwJ3VzaW5nIEZISVIgdmVyc2lvbiAnMy4wLjAnaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICczLjAuMCcgY2FsbGVkIEZISVJIZWxwZXJzdmFsdWVzZXQgIk9mZmljZSBWaXNpdCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAxLjEyLjEwMDEndmFsdWVzZXQgIkFubnVhbCBXZWxsbmVzcyBWaXNpdCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNTI2LjMuMTI0MCd2YWx1ZXNldCAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzIC0gRXN0YWJsaXNoZWQgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDI1J3ZhbHVlc2V0ICJQcmV2ZW50aXZlIENhcmUgU2VydmljZXMtSW5pdGlhbCBPZmZpY2UgVmlzaXQsIDE4IGFuZCBVcCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAxLjEyLjEwMjMndmFsdWVzZXQgIkhvbWUgSGVhbHRoY2FyZSBTZXJ2aWNlcyI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAxLjEyLjEwMTYnY29udGV4dCBQYXRpZW50ZGVmaW5lIGZ1bmN0aW9uICJRdWFsaWZ5aW5nIEVuY291bnRlcnMiKE1lYXN1cmVtZW50UGVyaW9kIEludGVydmFsPERhdGVUaW1lPik6CSgJICAgICggW0VuY291bnRlcjogIk9mZmljZSBWaXNpdCJdIEUgd2hlcmUgRS5zdGF0dXMgPSAnZmluYWwnICkJCXVuaW9uICggW0VuY291bnRlcjogIkFubnVhbCBXZWxsbmVzcyBWaXNpdCJdIEUgd2hlcmUgRS5zdGF0dXMgPSAnZmluYWwnICkJCXVuaW9uICggW0VuY291bnRlcjogIlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcyAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIl0gRSB3aGVyZSBFLnN0YXR1cyA9ICdmaW5hbCcgKQkJdW5pb24gKCBbRW5jb3VudGVyOiAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiXSBFIHdoZXJlIEUuc3RhdHVzID0gJ2ZpbmFsJyApCQl1bmlvbiAoIFtFbmNvdW50ZXI6ICJIb21lIEhlYWx0aGNhcmUgU2VydmljZXMiXSBFIHdoZXJlIEUuc3RhdHVzID0gJ2ZpbmFsJyApICAgICkgVmFsaWRFbmNvdW50ZXIJCXdoZXJlIFZhbGlkRW5jb3VudGVyLnBlcmlvZCBkdXJpbmcgZGF5IG9mIE1lYXN1cmVtZW50UGVyaW9k"
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-adult-outpatient-encounters-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-cms124-FHIR",
        "version": "7.0.0",
        "status": "active",
        "experimental": true,
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-mat-global-common-functions-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-adult-outpatient-encounters-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-hospice-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.526.3.1240"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "ProcedureRequest",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Coverage",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.114222.4.11.3591"
              }
            ]
          },
          {
            "type": "Patient",
            "codeFilter": [
              {
                "path": "gender",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1"
              }
            ]
          },
          {
            "type": "Observation",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1017"
              }
            ]
          },
          {
            "type": "Observation",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.110.12.1059"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1014"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBDZXJ2aWNhbENhbmNlclNjcmVlbmluZyB2ZXJzaW9uICc3LjIuMDAwJ3VzaW5nIEZISVIgdmVyc2lvbiAnMy4wLjAnaW5jbHVkZSBNQVRHbG9iYWxDb21tb25GdW5jdGlvbnNGSElSIHZlcnNpb24gJzIuMC4wMDAnIGNhbGxlZCBHbG9iYWxpbmNsdWRlIEFkdWx0T3V0cGF0aWVudEVuY291bnRlcnNGSElSIHZlcnNpb24gJzEuMS4wMDAnIGNhbGxlZCBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzaW5jbHVkZSBIb3NwaWNlRkhJUiB2ZXJzaW9uICcxLjAuMDAwJyBjYWxsZWQgSG9zcGljZWluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnMy4wLjAnIGNhbGxlZCBGSElSSGVscGVyc2NvZGVzeXN0ZW0gIlNOT01FRENUOjIwMTctMDkiOiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdCcgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTctMDkndmFsdWVzZXQgIk9OQyBBZG1pbmlzdHJhdGl2ZSBTZXgiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMSd2YWx1ZXNldCAiUmFjZSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM2J3ZhbHVlc2V0ICJFdGhuaWNpdHkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExNDIyMi40LjExLjgzNyd2YWx1ZXNldCAiUGF5ZXIiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExNDIyMi40LjExLjM1OTEndmFsdWVzZXQgIkZlbWFsZSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNTYwLjEwMC4yJ3ZhbHVlc2V0ICJIb21lIEhlYWx0aGNhcmUgU2VydmljZXMiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDE2J3ZhbHVlc2V0ICJIeXN0ZXJlY3RvbXkgd2l0aCBObyBSZXNpZHVhbCBDZXJ2aXgiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjE5OC4xMi4xMDE0J3ZhbHVlc2V0ICJPZmZpY2UgVmlzaXQiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDAxJ3ZhbHVlc2V0ICJQYXAgVGVzdCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTA4LjEyLjEwMTcndmFsdWVzZXQgIlByZXZlbnRpdmUgQ2FyZSBTZXJ2aWNlcyAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMTggYW5kIFVwIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAyNSd2YWx1ZXNldCAiUHJldmVudGl2ZSBDYXJlIFNlcnZpY2VzLUluaXRpYWwgT2ZmaWNlIFZpc2l0LCAxOCBhbmQgVXAiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDIzJ3ZhbHVlc2V0ICJIUFYgVGVzdCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTEwLjEyLjEwNTknY29kZSAiQ29uZ2VuaXRhbCBhYnNlbmNlIG9mIGNlcnZpeCAoZGlzb3JkZXIpIjogJzM3Njg3MDAwJyBmcm9tICJTTk9NRURDVDoyMDE3LTA5IiBkaXNwbGF5ICdDb25nZW5pdGFsIGFic2VuY2Ugb2YgY2Vydml4IChkaXNvcmRlcikncGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGVUaW1lPmNvbnRleHQgUGF0aWVudGRlZmluZSAiRXRobmljaXR5IENhdGVnb3JpZXMiOgkJZmxhdHRlbiAoICAgICAgICAoICAgICAgICAgICAgUGF0aWVudC5leHRlbnNpb24gRXh0ZW5zaW9ucyAgICAgICAgICAgICAgICB3aGVyZSBFeHRlbnNpb25zLnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL3VzL2NvcmUvU3RydWN0dXJlRGVmaW5pdGlvbi91cy1jb3JlLWV0aG5pY2l0eScgICAgICAgICkgRXRobmljaXR5RXh0ZW5zaW9ucyAgICAgICAgICAgIHdoZXJlIEV0aG5pY2l0eUV4dGVuc2lvbnMuZXh0ZW5zaW9uLnVybCA9ICdvbWJDYXRlZ29yeScgICAgICAgIHJldHVybiBFdGhuaWNpdHlFeHRlbnNpb25zLmV4dGVuc2lvbgkJKWRlZmluZSAiU0RFIEV0aG5pY2l0eSI6CQkiRXRobmljaXR5IENhdGVnb3JpZXMiIEV0aG5pY2l0eUV4dAkJCQl3aGVyZSBGSElSSGVscGVycy5Ub0NvZGUoRXRobmljaXR5RXh0LnZhbHVlIGFzIEZISVIuQ29kaW5nKSBpbiAiRXRobmljaXR5IgkJcmV0dXJuIEZISVJIZWxwZXJzLlRvQ29kZShFdGhuaWNpdHlFeHQudmFsdWUgYXMgRkhJUi5Db2RpbmcpLmRpc3BsYXlkZWZpbmUgIlNERSBQYXllciI6ICAgIFtDb3ZlcmFnZTogdHlwZSBpbiAiUGF5ZXIiXSBQYXllciAgICAgIHJldHVybiB7ICAgICAgICBjb2RlOiBQYXllci50eXBlLCAgICAgICAgcGVyaW9kOiBQYXllci5wZXJpb2QgICAgICB9ZGVmaW5lICJSYWNlIENhdGVnb3JpZXMiOgkJZmxhdHRlbiAoICAgICAgICAoICAgICAgICAgICAgUGF0aWVudC5leHRlbnNpb24gRXh0ZW5zaW9ucyAgICAgICAgICAgICAgICB3aGVyZSBFeHRlbnNpb25zLnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL3VzL2NvcmUvU3RydWN0dXJlRGVmaW5pdGlvbi91cy1jb3JlLXJhY2UnICAgICAgICApIFJhY2VFeHRlbnNpb25zICAgICAgICAgICAgd2hlcmUgUmFjZUV4dGVuc2lvbnMuZXh0ZW5zaW9uLnVybCA9ICdvbWJDYXRlZ29yeScgICAgICAgIHJldHVybiBSYWNlRXh0ZW5zaW9ucy5leHRlbnNpb24gICAgKWRlZmluZSAiU0RFIFJhY2UiOgkJIlJhY2UgQ2F0ZWdvcmllcyIgUmFjZUV4dAkJCQl3aGVyZSBGSElSSGVscGVycy5Ub0NvZGUoUmFjZUV4dC52YWx1ZSBhcyBGSElSLkNvZGluZykgaW4gIlJhY2UiCQlyZXR1cm4gRkhJUkhlbHBlcnMuVG9Db2RlKFJhY2VFeHQudmFsdWUgYXMgRkhJUi5Db2RpbmcpLmRpc3BsYXlkZWZpbmUgIlNERSBTZXgiOgkJW1BhdGllbnQ6IGdlbmRlciBpbiAiT05DIEFkbWluaXN0cmF0aXZlIFNleCJdIFAJCQlyZXR1cm4gUC5nZW5kZXJkZWZpbmUgIk51bWVyYXRvciI6CWV4aXN0cyAiUGFwIFRlc3QgV2l0aGluIDMgWWVhcnMiCQlvciBleGlzdHMgIlBhcCBUZXN0IFdpdGggSFBWIFdpdGhpbiA1IFllYXJzImRlZmluZSAiRGVub21pbmF0b3IiOgkiSW5pdGlhbCBQb3B1bGF0aW9uImRlZmluZSAiUGFwIFRlc3Qgd2l0aCBSZXN1bHRzIjoJW09ic2VydmF0aW9uOiAiUGFwIFRlc3QiXSBQYXBUZXN0CQl3aGVyZSBQYXBUZXN0LnZhbHVlIGlzIG5vdCBudWxsCQkJYW5kIFBhcFRlc3Quc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9ZGVmaW5lICJQYXAgVGVzdCBXaXRoaW4gMyBZZWFycyI6CSJQYXAgVGVzdCB3aXRoIFJlc3VsdHMiIFBhcFRlc3QJCXdoZXJlIFBhcFRlc3QuZWZmZWN0aXZlIDMgeWVhcnMgb3IgbGVzcyBiZWZvcmUgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJQYXBUZXN0IFdpdGhpbiA1IFllYXJzIjoJKCAiUGFwIFRlc3Qgd2l0aCBSZXN1bHRzIiBQYXBUZXN0T3ZlcjMwWWVhcnNPbGQJCQl3aGVyZSBHbG9iYWwuIkNhbGVuZGFyQWdlSW5ZZWFyc0F0IihGSElSSGVscGVycy5Ub0RhdGUoUGF0aWVudC5iaXJ0aERhdGUpLCBzdGFydCBvZiBHbG9iYWwuIkdldCBDaG9pY2UgSW50ZXJ2YWwgLSBkYXRlVGltZSBvciBQZXJpb2QiKFBhcFRlc3RPdmVyMzBZZWFyc09sZC5lZmZlY3RpdmUpKT49IDMwCQkJCWFuZCBQYXBUZXN0T3ZlcjMwWWVhcnNPbGQuZWZmZWN0aXZlIDUgeWVhcnMgb3IgbGVzcyBiZWZvcmUgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiCSlkZWZpbmUgIlBhcCBUZXN0IFdpdGggSFBWIFdpdGhpbiA1IFllYXJzIjoJIlBhcFRlc3QgV2l0aGluIDUgWWVhcnMiIFBhcFRlc3RPdmVyMzBZZWFyc09sZAkJd2l0aCBbT2JzZXJ2YXRpb246ICJIUFYgVGVzdCJdIEhQVlRlc3QJCQlzdWNoIHRoYXQgSFBWVGVzdC52YWx1ZSBpcyBub3QgbnVsbAkJCQlhbmQgKAkJCQkJSFBWVGVzdC5lZmZlY3RpdmUgc3RhcnRzIDEgZGF5IG9yIGxlc3MgYmVmb3JlIG9yIG9uIGRheSBvZiBzdGFydCBvZiBHbG9iYWwuIkdldCBDaG9pY2UgSW50ZXJ2YWwgLSBkYXRlVGltZSBvciBQZXJpb2QiKFBhcFRlc3RPdmVyMzBZZWFyc09sZC5lZmZlY3RpdmUpCQkJCQkJb3IgSFBWVGVzdC5lZmZlY3RpdmUgc3RhcnRzIGxlc3MgdGhhbiAxIGRheSBhZnRlciBvciBvbiBkYXkgb2Ygc3RhcnQgb2YgR2xvYmFsLiJHZXQgQ2hvaWNlIEludGVydmFsIC0gZGF0ZVRpbWUgb3IgUGVyaW9kIihQYXBUZXN0T3ZlcjMwWWVhcnNPbGQuZWZmZWN0aXZlKQkJCQkpCQkJCWFuZCBIUFZUZXN0LnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfWRlZmluZSAiRGVub21pbmF0b3IgRXhjbHVzaW9uIjoJSG9zcGljZS4iSGFzIEhvc3BpY2UiKCJNZWFzdXJlbWVudCBQZXJpb2QiKQkJb3IgZXhpc3RzICJTdXJnaWNhbCBBYnNlbmNlIG9mIENlcnZpeCIJCW9yIGV4aXN0cyAiQWJzZW5jZSBvZiBDZXJ2aXgiZGVmaW5lICJBYnNlbmNlIG9mIENlcnZpeCI6CVtDb25kaXRpb24gOiAiQ29uZ2VuaXRhbCBhYnNlbmNlIG9mIGNlcnZpeCAoZGlzb3JkZXIpIl0gTm9DZXJ2aXhCaXJ0aAkJd2hlcmUgTm9DZXJ2aXhCaXJ0aC5vbnNldCBzdGFydHMgYmVmb3JlIGVuZCAiTWVhc3VyZW1lbnQgUGVyaW9kIgkJCWFuZCBOb0NlcnZpeEJpcnRoLmNsaW5pY2FsU3RhdHVzID0gJ2FjdGl2ZSdkZWZpbmUgIlN1cmdpY2FsIEFic2VuY2Ugb2YgQ2Vydml4IjoJW1Byb2NlZHVyZTogIkh5c3RlcmVjdG9teSB3aXRoIE5vIFJlc2lkdWFsIENlcnZpeCJdIE5vQ2Vydml4SHlzdGVyZWN0b215CQl3aGVyZSBOb0NlcnZpeEh5c3RlcmVjdG9teS5wZXJmb3JtZWQgZW5kcyBiZWZvcmUgZW5kICJNZWFzdXJlbWVudCBQZXJpb2QiCQkJYW5kIE5vQ2Vydml4SHlzdGVyZWN0b215LnN0YXR1cyA9ICdjb21wbGV0ZWQnZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24iOglQYXRpZW50LmdlbmRlciA9ICdmZW1hbGUnCQlhbmQgR2xvYmFsLiJDYWxlbmRhckFnZUluWWVhcnNBdCIoRkhJUkhlbHBlcnMuVG9EYXRlKFBhdGllbnQuYmlydGhEYXRlKSwgc3RhcnQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIpIGluIEludGVydmFsWzIzLCA2NF0JCWFuZCBleGlzdHMgQWR1bHRPdXRwYXRpZW50RW5jb3VudGVycy4iUXVhbGlmeWluZyBFbmNvdW50ZXJzIigiTWVhc3VyZW1lbnQgUGVyaW9kIik="
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-cms124-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-cms125-FHIR",
        "version": "6.0.0",
        "status": "active",
        "experimental": true,
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-mat-global-common-functions-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-adult-outpatient-encounters-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-hospice-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.526.3.1240"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "ProcedureRequest",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Coverage",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.114222.4.11.3591"
              }
            ]
          },
          {
            "type": "Patient",
            "codeFilter": [
              {
                "path": "gender",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1020"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1070"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1071"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1069"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1071"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1068"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1005"
              }
            ]
          },
          {
            "type": "DiagnosticReport",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1018"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBCcmVhc3RDYW5jZXJTY3JlZW5pbmcgdmVyc2lvbiAnNy4yLjAwMCd1c2luZyBGSElSIHZlcnNpb24gJzMuMC4wJ2luY2x1ZGUgTUFUR2xvYmFsQ29tbW9uRnVuY3Rpb25zRkhJUiB2ZXJzaW9uICcyLjAuMDAwJyBjYWxsZWQgR2xvYmFsaW5jbHVkZSBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzRkhJUiB2ZXJzaW9uICcxLjEuMDAwJyBjYWxsZWQgQWR1bHRPdXRwYXRpZW50RW5jb3VudGVyc2luY2x1ZGUgSG9zcGljZUZISVIgdmVyc2lvbiAnMS4wLjAwMCcgY2FsbGVkIEhvc3BpY2VpbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgRkhJUkhlbHBlcnN2YWx1ZXNldCAiT05DIEFkbWluaXN0cmF0aXZlIFNleCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzNzYyLjEuNC4xJ3ZhbHVlc2V0ICJSYWNlIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTQyMjIuNC4xMS44MzYndmFsdWVzZXQgIkV0aG5pY2l0eSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM3J3ZhbHVlc2V0ICJQYXllciI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTE0MjIyLjQuMTEuMzU5MSd2YWx1ZXNldCAiQmlsYXRlcmFsIE1hc3RlY3RvbXkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjE5OC4xMi4xMDA1J3ZhbHVlc2V0ICJGZW1hbGUiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjU2MC4xMDAuMid2YWx1ZXNldCAiTWFtbW9ncmFwaHkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwOC4xMi4xMDE4J3ZhbHVlc2V0ICJVbmlsYXRlcmFsIE1hc3RlY3RvbXkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjE5OC4xMi4xMDIwJ3ZhbHVlc2V0ICJIaXN0b3J5IG9mIGJpbGF0ZXJhbCBtYXN0ZWN0b215IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xOTguMTIuMTA2OCd2YWx1ZXNldCAiU3RhdHVzIFBvc3QgTGVmdCBNYXN0ZWN0b215IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xOTguMTIuMTA2OSd2YWx1ZXNldCAiU3RhdHVzIFBvc3QgUmlnaHQgTWFzdGVjdG9teSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTk4LjEyLjEwNzAndmFsdWVzZXQgIkxlZnQiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEyMi4xMi4xMDM2J3ZhbHVlc2V0ICJSaWdodCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTIyLjEyLjEwMzUndmFsdWVzZXQgIlVuaWxhdGVyYWwgTWFzdGVjdG9teSwgVW5zcGVjaWZpZWQgTGF0ZXJhbGl0eSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTk4LjEyLjEwNzEncGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGVUaW1lPmNvbnRleHQgUGF0aWVudGRlZmluZSAiRXRobmljaXR5IENhdGVnb3JpZXMiOgkJZmxhdHRlbiAoICAgICAgICAoICAgICAgICAgICAgUGF0aWVudC5leHRlbnNpb24gRXh0ZW5zaW9ucyAgICAgICAgICAgICAgICB3aGVyZSBFeHRlbnNpb25zLnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL3VzL2NvcmUvU3RydWN0dXJlRGVmaW5pdGlvbi91cy1jb3JlLWV0aG5pY2l0eScgICAgICAgICkgRXRobmljaXR5RXh0ZW5zaW9ucyAgICAgICAgICAgIHdoZXJlIEV0aG5pY2l0eUV4dGVuc2lvbnMuZXh0ZW5zaW9uLnVybCA9ICdvbWJDYXRlZ29yeScgICAgICAgIHJldHVybiBFdGhuaWNpdHlFeHRlbnNpb25zLmV4dGVuc2lvbgkJKWRlZmluZSAiU0RFIEV0aG5pY2l0eSI6CQkiRXRobmljaXR5IENhdGVnb3JpZXMiIEV0aG5pY2l0eUV4dAkJCQl3aGVyZSBGSElSSGVscGVycy5Ub0NvZGUoRXRobmljaXR5RXh0LnZhbHVlIGFzIEZISVIuQ29kaW5nKSBpbiAiRXRobmljaXR5IgkJcmV0dXJuIEZISVJIZWxwZXJzLlRvQ29kZShFdGhuaWNpdHlFeHQudmFsdWUgYXMgRkhJUi5Db2RpbmcpLmRpc3BsYXlkZWZpbmUgIlNERSBQYXllciI6ICAgIFtDb3ZlcmFnZTogdHlwZSBpbiAiUGF5ZXIiXSBQYXllciAgICAgIHJldHVybiB7ICAgICAgICBjb2RlOiBQYXllci50eXBlLCAgICAgICAgcGVyaW9kOiBQYXllci5wZXJpb2QgICAgICB9ZGVmaW5lICJSYWNlIENhdGVnb3JpZXMiOgkJZmxhdHRlbiAoICAgICAgICAoICAgICAgICAgICAgUGF0aWVudC5leHRlbnNpb24gRXh0ZW5zaW9ucyAgICAgICAgICAgICAgICB3aGVyZSBFeHRlbnNpb25zLnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL3VzL2NvcmUvU3RydWN0dXJlRGVmaW5pdGlvbi91cy1jb3JlLXJhY2UnICAgICAgICApIFJhY2VFeHRlbnNpb25zICAgICAgICAgICAgd2hlcmUgUmFjZUV4dGVuc2lvbnMuZXh0ZW5zaW9uLnVybCA9ICdvbWJDYXRlZ29yeScgICAgICAgIHJldHVybiBSYWNlRXh0ZW5zaW9ucy5leHRlbnNpb24gICAgKWRlZmluZSAiU0RFIFJhY2UiOgkJIlJhY2UgQ2F0ZWdvcmllcyIgUmFjZUV4dAkJCQl3aGVyZSBGSElSSGVscGVycy5Ub0NvZGUoUmFjZUV4dC52YWx1ZSBhcyBGSElSLkNvZGluZykgaW4gIlJhY2UiCQlyZXR1cm4gRkhJUkhlbHBlcnMuVG9Db2RlKFJhY2VFeHQudmFsdWUgYXMgRkhJUi5Db2RpbmcpLmRpc3BsYXlkZWZpbmUgIlNERSBTZXgiOgkJW1BhdGllbnQ6IGdlbmRlciBpbiAiT05DIEFkbWluaXN0cmF0aXZlIFNleCJdIFAJCQlyZXR1cm4gUC5nZW5kZXJkZWZpbmUgIkRlbm9taW5hdG9yIjoJCSJJbml0aWFsIFBvcHVsYXRpb24iZGVmaW5lICJVbmlsYXRlcmFsIE1hc3RlY3RvbXkgUHJvY2VkdXJlIjoJCVtQcm9jZWR1cmU6ICJVbmlsYXRlcmFsIE1hc3RlY3RvbXkiXSBVbmlsYXRlcmFsTWFzdGVjdG9teVByb2NlZHVyZQkJCQl3aGVyZSBVbmlsYXRlcmFsTWFzdGVjdG9teVByb2NlZHVyZS5wZXJmb3JtZWQgZW5kcyBiZWZvcmUgZGF5IG9mIGVuZCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgkJCQkJCWFuZCBVbmlsYXRlcmFsTWFzdGVjdG9teVByb2NlZHVyZS5zdGF0dXMgPSAnY29tcGxldGVkJ2RlZmluZSAiUmlnaHQgTWFzdGVjdG9teSI6CQkoCQkJCSggW0NvbmRpdGlvbjogIlN0YXR1cyBQb3N0IFJpZ2h0IE1hc3RlY3RvbXkiXSBDIHdoZXJlIEMuY2xpbmljYWxTdGF0dXMgPSAnYWN0aXZlJyApCQkJCXVuaW9uICgJCQkJCQlbQ29uZGl0aW9uOiAiVW5pbGF0ZXJhbCBNYXN0ZWN0b215LCBVbnNwZWNpZmllZCBMYXRlcmFsaXR5Il0gVW5pbGF0ZXJhbE1hc3RlY3RvbXlEaWFnbm9zaXMJCQkJCQkJCXdoZXJlIFVuaWxhdGVyYWxNYXN0ZWN0b215RGlhZ25vc2lzLmJvZHlTaXRlIGluICJSaWdodCIJCQkJCQkJCQkJYW5kIFVuaWxhdGVyYWxNYXN0ZWN0b215RGlhZ25vc2lzLmNsaW5pY2FsU3RhdHVzID0gJ2FjdGl2ZScJCQkJKQkJKSBSaWdodE1hc3RlY3RvbXkJCQkJd2hlcmUgR2xvYmFsLiJOb3JtYWxpemUgT25zZXQiKFJpZ2h0TWFzdGVjdG9teS5vbnNldCkgc3RhcnRzIGJlZm9yZSBkYXkgb2YgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJMZWZ0IE1hc3RlY3RvbXkiOgkJKAkJICAgICggW0NvbmRpdGlvbjogIlN0YXR1cyBQb3N0IExlZnQgTWFzdGVjdG9teSJdIEMgd2hlcmUgQy5jbGluaWNhbFN0YXR1cyA9ICdhY3RpdmUnICkJCQkJdW5pb24gKAkJCQkJCVtDb25kaXRpb246ICJVbmlsYXRlcmFsIE1hc3RlY3RvbXksIFVuc3BlY2lmaWVkIExhdGVyYWxpdHkiXSBVbmlsYXRlcmFsTWFzdGVjdG9teURpYWdub3NpcwkJCQkJCQkJd2hlcmUgVW5pbGF0ZXJhbE1hc3RlY3RvbXlEaWFnbm9zaXMuYm9keVNpdGUgaW4gIkxlZnQiCQkJCQkJCQkJCWFuZCBVbmlsYXRlcmFsTWFzdGVjdG9teURpYWdub3Npcy5jbGluaWNhbFN0YXR1cyA9ICdhY3RpdmUnCQkJCSkJCSkgTGVmdE1hc3RlY3RvbXkJCQkJd2hlcmUgR2xvYmFsLiJOb3JtYWxpemUgT25zZXQiKExlZnRNYXN0ZWN0b215Lm9uc2V0KSBzdGFydHMgYmVmb3JlIGRheSBvZiBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCJkZWZpbmUgIkhpc3RvcnkgQmlsYXRlcmFsIE1hc3RlY3RvbXkiOgkJW0NvbmRpdGlvbjogIkhpc3Rvcnkgb2YgYmlsYXRlcmFsIG1hc3RlY3RvbXkiXSBCaWxhdGVyYWxNYXN0ZWN0b215SGlzdG9yeQkJCQl3aGVyZSBHbG9iYWwuIk5vcm1hbGl6ZSBPbnNldCIoQmlsYXRlcmFsTWFzdGVjdG9teUhpc3Rvcnkub25zZXQpIHN0YXJ0cyBiZWZvcmUgZGF5IG9mIGVuZCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgkJCQkJCWFuZCBCaWxhdGVyYWxNYXN0ZWN0b215SGlzdG9yeS5jbGluaWNhbFN0YXR1cyA9ICdhY3RpdmUnZGVmaW5lICJCaWxhdGVyYWwgTWFzdGVjdG9teSBQcm9jZWR1cmUiOgkJW1Byb2NlZHVyZTogIkJpbGF0ZXJhbCBNYXN0ZWN0b215Il0gQmlsYXRlcmFsTWFzdGVjdG9teVBlcmZvcm1lZAkJCQl3aGVyZSBCaWxhdGVyYWxNYXN0ZWN0b215UGVyZm9ybWVkLnBlcmZvcm1lZCBlbmRzIGJlZm9yZSBkYXkgb2YgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiCQkJCQkJYW5kIEJpbGF0ZXJhbE1hc3RlY3RvbXlQZXJmb3JtZWQuc3RhdHVzID0gJ2NvbXBsZXRlZCdkZWZpbmUgIk51bWVyYXRvciI6CQlleGlzdHMgKAkJCQlbRGlhZ25vc3RpY1JlcG9ydDogIk1hbW1vZ3JhcGh5Il0gTWFtbW9ncmFtCQkJCQkJd2hlcmUgKCBNYW1tb2dyYW0uZWZmZWN0aXZlIGVuZHMgMjcgbW9udGhzIG9yIGxlc3MgYmVmb3JlIGRheSBvZiBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIgKQkJCQkJCQkJYW5kIE1hbW1vZ3JhbS5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnLCAnYXBwZW5kZWQnIH0JCSlkZWZpbmUgIkRlbm9taW5hdG9yIEV4Y2x1c2lvbiI6CQlIb3NwaWNlLiJIYXMgSG9zcGljZSIoIk1lYXN1cmVtZW50IFBlcmlvZCIpCQkJCW9yICggQ291bnQoIlVuaWxhdGVyYWwgTWFzdGVjdG9teSBQcm9jZWR1cmUiKSA9IDIgKQkJCQlvciAoIGV4aXN0cyAiUmlnaHQgTWFzdGVjdG9teSIgYW5kIGV4aXN0cyAiTGVmdCBNYXN0ZWN0b215IiApCQkJCW9yIGV4aXN0cyAiSGlzdG9yeSBCaWxhdGVyYWwgTWFzdGVjdG9teSIJCQkJb3IgZXhpc3RzICJCaWxhdGVyYWwgTWFzdGVjdG9teSBQcm9jZWR1cmUiZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24iOgkJUGF0aWVudC5nZW5kZXIgPSAnZmVtYWxlJwkJCQlhbmQgR2xvYmFsLiJDYWxlbmRhckFnZUluWWVhcnNBdCIoRkhJUkhlbHBlcnMuVG9EYXRlKFBhdGllbnQuYmlydGhEYXRlKSwgc3RhcnQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIpIGluIEludGVydmFsWzUxLCA3NF0JCQkJYW5kIGV4aXN0cyBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzLiJRdWFsaWZ5aW5nIEVuY291bnRlcnMiKCJNZWFzdXJlbWVudCBQZXJpb2QiKQ=="
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-cms125-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-cms130",
        "version": "7.0.0",
        "status": "active",
        "experimental": true,
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-adult-outpatient-encounters-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-mat-global-common-functions-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-hospice-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1001"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.526.3.1240"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1025"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1023"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.101.12.1016"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "ProcedureRequest",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Coverage",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.114222.4.11.3591"
              }
            ]
          },
          {
            "type": "Patient"
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1010"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1038"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1019"
              }
            ]
          },
          {
            "type": "Condition",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1001"
              }
            ]
          },
          {
            "type": "Observation",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.198.12.1011"
              }
            ]
          },
          {
            "type": "Observation",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1039"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113883.3.464.1003.108.12.1020"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBDb2xvcmVjdGFsQ2FuY2VyU2NyZWVuaW5nIHZlcnNpb24gJzcuMi4wMDAndXNpbmcgRkhJUiB2ZXJzaW9uICczLjAuMCdpbmNsdWRlIEFkdWx0T3V0cGF0aWVudEVuY291bnRlcnNGSElSIHZlcnNpb24gJzEuMS4wMDAnIGNhbGxlZCBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzaW5jbHVkZSBNQVRHbG9iYWxDb21tb25GdW5jdGlvbnNGSElSIHZlcnNpb24gJzIuMC4wMDAnIGNhbGxlZCBHbG9iYWxpbmNsdWRlIEhvc3BpY2VGSElSIHZlcnNpb24gJzEuMC4wMDAnIGNhbGxlZCBIb3NwaWNlaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICczLjAuMCcgY2FsbGVkIEZISVJIZWxwZXJzdmFsdWVzZXQgIk9OQyBBZG1pbmlzdHJhdGl2ZSBTZXgiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMSd2YWx1ZXNldCAiUmFjZSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM2J3ZhbHVlc2V0ICJFdGhuaWNpdHkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExNDIyMi40LjExLjgzNyd2YWx1ZXNldCAiUGF5ZXIiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExNDIyMi40LjExLjM1OTEndmFsdWVzZXQgIkNvbG9ub3Njb3B5IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDguMTIuMTAyMCd2YWx1ZXNldCAiRmVjYWwgT2NjdWx0IEJsb29kIFRlc3QgKEZPQlQpIjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xOTguMTIuMTAxMSd2YWx1ZXNldCAiRmxleGlibGUgU2lnbW9pZG9zY29weSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTk4LjEyLjEwMTAndmFsdWVzZXQgIk1hbGlnbmFudCBOZW9wbGFzbSBvZiBDb2xvbiI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTA4LjEyLjEwMDEndmFsdWVzZXQgIlRvdGFsIENvbGVjdG9teSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTk4LjEyLjEwMTkndmFsdWVzZXQgIkZJVCBETkEiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwOC4xMi4xMDM5J3ZhbHVlc2V0ICJDVCBDb2xvbm9ncmFwaHkiOiAndXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwOC4xMi4xMDM4J3BhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlVGltZT5jb250ZXh0IFBhdGllbnRkZWZpbmUgIkV0aG5pY2l0eSBDYXRlZ29yaWVzIjoJCWZsYXR0ZW4gKCAgICAgICAgKCAgICAgICAgICAgIFBhdGllbnQuZXh0ZW5zaW9uIEV4dGVuc2lvbnMgICAgICAgICAgICAgICAgd2hlcmUgRXh0ZW5zaW9ucy51cmwgPSAnaHR0cDovL2hsNy5vcmcvZmhpci91cy9jb3JlL1N0cnVjdHVyZURlZmluaXRpb24vdXMtY29yZS1ldGhuaWNpdHknICAgICAgICApIEV0aG5pY2l0eUV4dGVuc2lvbnMgICAgICAgICAgICB3aGVyZSBFdGhuaWNpdHlFeHRlbnNpb25zLmV4dGVuc2lvbi51cmwgPSAnb21iQ2F0ZWdvcnknICAgICAgICByZXR1cm4gRXRobmljaXR5RXh0ZW5zaW9ucy5leHRlbnNpb24JCSlkZWZpbmUgIlNERSBFdGhuaWNpdHkiOgkJIkV0aG5pY2l0eSBDYXRlZ29yaWVzIiBFdGhuaWNpdHlFeHQJCQkJd2hlcmUgRkhJUkhlbHBlcnMuVG9Db2RlKEV0aG5pY2l0eUV4dC52YWx1ZSBhcyBGSElSLkNvZGluZykgaW4gIkV0aG5pY2l0eSIJCXJldHVybiBGSElSSGVscGVycy5Ub0NvZGUoRXRobmljaXR5RXh0LnZhbHVlIGFzIEZISVIuQ29kaW5nKS5kaXNwbGF5ZGVmaW5lICJTREUgUGF5ZXIiOiAgICBbQ292ZXJhZ2U6IHR5cGUgaW4gIlBheWVyIl0gUGF5ZXIgICAgICByZXR1cm4geyAgICAgICAgY29kZTogUGF5ZXIudHlwZSwgICAgICAgIHBlcmlvZDogUGF5ZXIucGVyaW9kICAgICAgfWRlZmluZSAiUmFjZSBDYXRlZ29yaWVzIjoJCWZsYXR0ZW4gKCAgICAgICAgKCAgICAgICAgICAgIFBhdGllbnQuZXh0ZW5zaW9uIEV4dGVuc2lvbnMgICAgICAgICAgICAgICAgd2hlcmUgRXh0ZW5zaW9ucy51cmwgPSAnaHR0cDovL2hsNy5vcmcvZmhpci91cy9jb3JlL1N0cnVjdHVyZURlZmluaXRpb24vdXMtY29yZS1yYWNlJyAgICAgICAgKSBSYWNlRXh0ZW5zaW9ucyAgICAgICAgICAgIHdoZXJlIFJhY2VFeHRlbnNpb25zLmV4dGVuc2lvbi51cmwgPSAnb21iQ2F0ZWdvcnknICAgICAgICByZXR1cm4gUmFjZUV4dGVuc2lvbnMuZXh0ZW5zaW9uICAgIClkZWZpbmUgIlNERSBSYWNlIjoJCSJSYWNlIENhdGVnb3JpZXMiIFJhY2VFeHQJCQkJd2hlcmUgRkhJUkhlbHBlcnMuVG9Db2RlKFJhY2VFeHQudmFsdWUgYXMgRkhJUi5Db2RpbmcpIGluICJSYWNlIgkJcmV0dXJuIEZISVJIZWxwZXJzLlRvQ29kZShSYWNlRXh0LnZhbHVlIGFzIEZISVIuQ29kaW5nKS5kaXNwbGF5ZGVmaW5lICJTREUgU2V4IjoJW1BhdGllbnRdIFAgd2hlcmUgUC5nZW5kZXIgaW4geydtYWxlJywgJ2ZlbWFsZSd9CSAgcmV0dXJuIFAuZ2VuZGVyZGVmaW5lICJEZW5vbWluYXRvciI6CXRydWVkZWZpbmUgIkZsZXhpYmxlIFNpZ21vaWRvc2NvcHkgUGVyZm9ybWVkIjoJW1Byb2NlZHVyZTogIkZsZXhpYmxlIFNpZ21vaWRvc2NvcHkiXSBGbGV4aWJsZVNpZ21vaWRvc2NvcHkJCXdoZXJlIEZsZXhpYmxlU2lnbW9pZG9zY29weS5zdGF0dXMgPSAnY29tcGxldGVkJwkJCWFuZCBGbGV4aWJsZVNpZ21vaWRvc2NvcHkucGVyZm9ybWVkIGVuZHMgNSB5ZWFycyBvciBsZXNzIG9uIG9yIGJlZm9yZSBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCJkZWZpbmUgIkNUIENvbG9ub2dyYXBoeSBQZXJmb3JtZWQiOglbUHJvY2VkdXJlOiAiQ1QgQ29sb25vZ3JhcGh5Il0gQ29sb25vZ3JhcGh5CQl3aGVyZSBDb2xvbm9ncmFwaHkuc3RhdHVzID0gJ2NvbXBsZXRlZCcJCQlhbmQgQ29sb25vZ3JhcGh5LnBlcmZvcm1lZCBlbmRzIDUgeWVhcnMgb3IgbGVzcyBvbiBvciBiZWZvcmUgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJUb3RhbCBDb2xlY3RvbXkgUGVyZm9ybWVkIjoJW1Byb2NlZHVyZTogIlRvdGFsIENvbGVjdG9teSJdIENvbGVjdG9teQkJd2hlcmUgQ29sZWN0b215LnN0YXR1cyA9ICdjb21wbGV0ZWQnCQkJYW5kIEdsb2JhbC4iR2V0IENob2ljZSBJbnRlcnZhbCAtIGRhdGVUaW1lIG9yIFBlcmlvZCIoQ29sZWN0b215LnBlcmZvcm1lZCkgc3RhcnRzIG9uIG9yIGJlZm9yZSBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCJkZWZpbmUgIk1hbGlnbmFudCBOZW9wbGFzbSI6CVtDb25kaXRpb246ICJNYWxpZ25hbnQgTmVvcGxhc20gb2YgQ29sb24iXSBDb2xvcmVjdGFsQ2FuY2VyCQl3aGVyZSBDb2xvcmVjdGFsQ2FuY2VyLmNsaW5pY2FsU3RhdHVzID0gJ2FjdGl2ZScJCQlhbmQgR2xvYmFsLiJOb3JtYWxpemUgT25zZXQiKENvbG9yZWN0YWxDYW5jZXIub25zZXQpIHN0YXJ0cyBvbiBvciBiZWZvcmUgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJGZWNhbCBPY2N1bHQgQmxvb2QgVGVzdCBQZXJmb3JtZWQiOglbT2JzZXJ2YXRpb246ICJGZWNhbCBPY2N1bHQgQmxvb2QgVGVzdCAoRk9CVCkiXSBGZWNhbE9jY3VsdFJlc3VsdAkJd2hlcmUgRmVjYWxPY2N1bHRSZXN1bHQuc3RhdHVzIGluIHsnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnLCAncHJlbGltaW5hcnknfQkJCWFuZCBGZWNhbE9jY3VsdFJlc3VsdC52YWx1ZSBpcyBub3QgbnVsbAkJCWFuZCBGZWNhbE9jY3VsdFJlc3VsdC5lZmZlY3RpdmUgZHVyaW5nIGRheSBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgkJCS8vIGFuZCBGZWNhbE9jY3VsdFJlc3VsdC5GSElSLnByb3ZlbmFuY2UucmVjb3JkZWQgZHVyaW5nICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJGZWNhbCBJbW11bm9jaGVtaWNhbCBUZXN0IEROQSI6CVtPYnNlcnZhdGlvbjogIkZJVCBETkEiXSBGaXRETkEJCXdoZXJlIEZpdEROQS5zdGF0dXMgaW4geydmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCd9CQkJYW5kIEZpdEROQS52YWx1ZSBpcyBub3QgbnVsbAkJCWFuZCBGaXRETkEuZWZmZWN0aXZlIG9jY3VycyAzIHllYXJzIG9yIGxlc3Mgb24gb3IgYmVmb3JlIGRheSBvZiBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIJCQkvLyBhbmQgRml0RE5BLkZISVIucHJvdmVuYW5jZS5yZWNvcmRlZCBvY2N1cnMgMyB5ZWFycyBvciBsZXNzIG9uIG9yIGJlZm9yZSBlbmQgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCJkZWZpbmUgIkNvbG9ub3Njb3B5IFBlcmZvcm1lZCI6CVtQcm9jZWR1cmU6ICJDb2xvbm9zY29weSJdIENvbG9ub3Njb3B5CQl3aGVyZSBDb2xvbm9zY29weS5zdGF0dXMgPSAnY29tcGxldGVkJwkJIAlhbmQgQ29sb25vc2NvcHkucGVyZm9ybWVkIGVuZHMgMTAgeWVhcnMgb3IgbGVzcyBvbiBvciBiZWZvcmUgZW5kIG9mICJNZWFzdXJlbWVudCBQZXJpb2QiZGVmaW5lICJOdW1lcmF0b3IiOglleGlzdHMgIkNvbG9ub3Njb3B5IFBlcmZvcm1lZCIJCW9yIGV4aXN0cyAiRmVjYWwgT2NjdWx0IEJsb29kIFRlc3QgUGVyZm9ybWVkIgkJb3IgZXhpc3RzICJGbGV4aWJsZSBTaWdtb2lkb3Njb3B5IFBlcmZvcm1lZCIJCW9yIGV4aXN0cyAiRmVjYWwgSW1tdW5vY2hlbWljYWwgVGVzdCBETkEiCQlvciBleGlzdHMgIkNUIENvbG9ub2dyYXBoeSBQZXJmb3JtZWQiZGVmaW5lICJEZW5vbWluYXRvciBFeGNsdXNpb24iOglIb3NwaWNlLiJIYXMgSG9zcGljZSIoIk1lYXN1cmVtZW50IFBlcmlvZCIpCQlvciBleGlzdHMgIk1hbGlnbmFudCBOZW9wbGFzbSIJCW9yIGV4aXN0cyAiVG90YWwgQ29sZWN0b215IFBlcmZvcm1lZCJkZWZpbmUgIkluaXRpYWwgUG9wdWxhdGlvbiI6CUdsb2JhbC4iQ2FsZW5kYXJBZ2VJblllYXJzQXQiKEZISVJIZWxwZXJzLlRvRGF0ZShQYXRpZW50LmJpcnRoRGF0ZSksIHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiKSBpbiBJbnRlcnZhbFs1MCwgNzVdCQkJYW5kIGV4aXN0cyBBZHVsdE91dHBhdGllbnRFbmNvdW50ZXJzLiJRdWFsaWZ5aW5nIEVuY291bnRlcnMiKCJNZWFzdXJlbWVudCBQZXJpb2QiKQ=="
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-cms130-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-hospice-FHIR",
        "status": "draft",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/library-mat-global-common-functions-FHIR"
            }
          },
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "ProcedureRequest",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          },
          {
            "type": "Procedure",
            "codeFilter": [
              {
                "path": "code",
                "valueSet": "urn:oid:2.16.840.1.113762.1.4.1108.15"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBIb3NwaWNlRkhJUiB2ZXJzaW9uICcxLjAuMDAwJ3VzaW5nIEZISVIgdmVyc2lvbiAnMy4wLjAnaW5jbHVkZSBNQVRHbG9iYWxDb21tb25GdW5jdGlvbnNGSElSIHZlcnNpb24gJzIuMC4wMDAnIGNhbGxlZCBHbG9iYWxpbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgRkhJUkhlbHBlcnMvLyBjb2Rlc3lzdGVtICJTTk9NRURDVDoyMDE3LTA5IjogJ3VybjpvaWQ6Mi4xNi44NDAuMS4xMTM4ODMuNi45NicgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTctMDknY29kZXN5c3RlbSAiU05PTUVEQ1Q6MjAxNy0wOSI6ICdodHRwOi8vc25vbWVkLmluZm8vc2N0JyB2ZXJzaW9uICd1cm46aGw3OnZlcnNpb246MjAxNy0wOSd2YWx1ZXNldCAiRW5jb3VudGVyIElucGF0aWVudCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNjY2LjUuMzA3J3ZhbHVlc2V0ICJIb3NwaWNlIGNhcmUgYW1idWxhdG9yeSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMTA4LjE1J2NvZGUgIkRpc2NoYXJnZSB0byBoZWFsdGhjYXJlIGZhY2lsaXR5IGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSkiOiAnNDI4MzcxMDAwMTI0MTAwJyBmcm9tICJTTk9NRURDVDoyMDE3LTA5IiBkaXNwbGF5ICdEaXNjaGFyZ2UgdG8gaGVhbHRoY2FyZSBmYWNpbGl0eSBmb3IgaG9zcGljZSBjYXJlIChwcm9jZWR1cmUpJ2NvZGUgIkRpc2NoYXJnZSB0byBob21lIGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSkiOiAnNDI4MzYxMDAwMTI0MTA3JyBmcm9tICJTTk9NRURDVDoyMDE3LTA5IiBkaXNwbGF5ICdEaXNjaGFyZ2UgdG8gaG9tZSBmb3IgaG9zcGljZSBjYXJlIChwcm9jZWR1cmUpJ2NvbnRleHQgUGF0aWVudGRlZmluZSBmdW5jdGlvbiAiSGFzIEhvc3BpY2UiKE1lYXN1cmVtZW50UGVyaW9kIEludGVydmFsPERhdGVUaW1lPik6CWV4aXN0cyAoCSAgICBbRW5jb3VudGVyOiAiRW5jb3VudGVyIElucGF0aWVudCJdIERpc2NoYXJnZUhvc3BpY2UJCQl3aGVyZSBEaXNjaGFyZ2VIb3NwaWNlLnN0YXR1cyA9ICdmaW5hbCcJCQkgICAgYW5kICgJCQkgICAgICAgIEZISVJIZWxwZXJzLlRvQ29uY2VwdChEaXNjaGFyZ2VIb3NwaWNlLmhvc3BpdGFsaXphdGlvbi5kaXNjaGFyZ2VEaXNwb3NpdGlvbikuY29kZXNbMF0gfiAiRGlzY2hhcmdlIHRvIGhvbWUgZm9yIGhvc3BpY2UgY2FyZSAocHJvY2VkdXJlKSIJCQkJCSAgICBvciBGSElSSGVscGVycy5Ub0NvbmNlcHQoRGlzY2hhcmdlSG9zcGljZS5ob3NwaXRhbGl6YXRpb24uZGlzY2hhcmdlRGlzcG9zaXRpb24pLmNvZGVzWzBdIH4gIkRpc2NoYXJnZSB0byBoZWFsdGhjYXJlIGZhY2lsaXR5IGZvciBob3NwaWNlIGNhcmUgKHByb2NlZHVyZSkiCQkJICAgICkJCQkJYW5kIERpc2NoYXJnZUhvc3BpY2UucGVyaW9kIGVuZHMgZHVyaW5nIGRheSBvZiBNZWFzdXJlbWVudFBlcmlvZAkpICAgIG9yIGV4aXN0cyAoICAgICAgICBbUHJvY2VkdXJlUmVxdWVzdDogIkhvc3BpY2UgY2FyZSBhbWJ1bGF0b3J5Il0gSG9zcGljZU9yZGVyICAgICAgICAgICAgd2hlcmUgSG9zcGljZU9yZGVyLmludGVudCA9ICdvcmRlcicgICAgICAgICAgICAgICAgYW5kIEhvc3BpY2VPcmRlci5hdXRob3JlZE9uIGluIGRheSBvZiBNZWFzdXJlbWVudFBlcmlvZCAgICApICAgIG9yIGV4aXN0cyAoICAgICAgICBbUHJvY2VkdXJlOiAiSG9zcGljZSBjYXJlIGFtYnVsYXRvcnkiXSBIb3NwaWNlUGVyZm9ybWVkICAgICAgICAgICAgd2hlcmUgSG9zcGljZVBlcmZvcm1lZC5zdGF0dXMgPSAnY29tcGxldGVkJyAgICAgICAgICAgICAgICBhbmQgR2xvYmFsLiJHZXQgQ2hvaWNlIEludGVydmFsIC0gZGF0ZVRpbWUgb3IgUGVyaW9kIihIb3NwaWNlUGVyZm9ybWVkLnBlcmZvcm1lZCkgb3ZlcmxhcHMgTWVhc3VyZW1lbnRQZXJpb2QgICAgKQ=="
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-hospice-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "library-mat-global-common-functions-FHIR",
        "status": "draft",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "relatedArtifact": [
          {
            "type": "depends-on",
            "resource": {
              "reference": "Library/FHIRHelpers"
            }
          }
        ],
        "dataRequirement": [
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.666.5.307"
              }
            ]
          },
          {
            "type": "Encounter",
            "codeFilter": [
              {
                "path": "type",
                "valueSet": "urn:oid:2.16.840.1.113883.3.117.1.7.1.292"
              }
            ]
          }
        ],
        "content": [
          {
            "contentType": "application/elm+xml",
            "data": ""
          },
          {
            "contentType": "text/cql",
            "data": "bGlicmFyeSBNQVRHbG9iYWxDb21tb25GdW5jdGlvbnNGSElSIHZlcnNpb24gJzIuMC4wMDAndXNpbmcgRkhJUiB2ZXJzaW9uICczLjAuMCdpbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgRkhJUkhlbHBlcnNjb2Rlc3lzdGVtICJMT0lOQzoyLjQ2IjogJ2h0dHA6Ly9sb2luYy5vcmcnIHZlcnNpb24gJ3VybjpobDc6dmVyc2lvbjoyLjQ2J2NvZGVzeXN0ZW0gIlNOT01FRENUOjIwMTYtMDMiOiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdCcgdmVyc2lvbiAndXJuOmhsNzp2ZXJzaW9uOjIwMTYtMDMnY29kZXN5c3RlbSAiUm9sZUNvZGUiOiAnaHR0cDovL2hsNy5vcmcvZmhpci92My9Sb2xlQ29kZSd2YWx1ZXNldCAiRW5jb3VudGVyIElucGF0aWVudCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuNjY2LjUuMzA3J3ZhbHVlc2V0ICJFbWVyZ2VuY3kgRGVwYXJ0bWVudCBWaXNpdCI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjI5Midjb2RlICJCaXJ0aGRhdGUiOiAnMjExMTItOCcgZnJvbSAiTE9JTkM6Mi40NiIgZGlzcGxheSAnQmlydGggZGF0ZSdjb2RlICJEZWFkIjogJzQxOTA5OTAwOScgZnJvbSAiU05PTUVEQ1Q6MjAxNi0wMyIgZGlzcGxheSAnRGVhZCdjb2RlICJFUiI6ICdFUicgZnJvbSAiUm9sZUNvZGUiIGRpc3BsYXkgJ0VtZXJnZW5jeSByb29tJ2NvZGUgIklDVSI6ICdJQ1UnIGZyb20gIlJvbGVDb2RlIiBkaXNwbGF5ICdJbnRlbnNpdmUgY2FyZSB1bml0J2NvbnRleHQgUGF0aWVudGRlZmluZSBmdW5jdGlvbiAiSW5wYXRpZW50IEVuY291bnRlciIoTWVhc3VyZW1lbnRQZXJpb2QgSW50ZXJ2YWw8RGF0ZVRpbWU+KToJW0VuY291bnRlcjogIkVuY291bnRlciBJbnBhdGllbnQiXSBFbmNvdW50ZXJJbnBhdGllbnQJCXdoZXJlIEVuY291bnRlcklucGF0aWVudC5zdGF0dXMgPSAnZmluaXNoZWQnCQkgICAgYW5kICJMZW5ndGhJbkRheXMiKEVuY291bnRlcklucGF0aWVudC5wZXJpb2QpIDw9IDEyMAkJCWFuZCBFbmNvdW50ZXJJbnBhdGllbnQucGVyaW9kIGVuZHMgZHVyaW5nIE1lYXN1cmVtZW50UGVyaW9kZGVmaW5lIGZ1bmN0aW9uICJUb0RhdGUiKFZhbHVlIERhdGVUaW1lKToJRGF0ZVRpbWUoeWVhciBmcm9tIFZhbHVlLCBtb250aCBmcm9tIFZhbHVlLCBkYXkgZnJvbSBWYWx1ZSwgMCwgMCwgMCwgMCwgdGltZXpvbmUgZnJvbSBWYWx1ZSlkZWZpbmUgZnVuY3Rpb24gIkNhbGVuZGFyQWdlSW5EYXlzQXQiKEJpcnRoRGF0ZVRpbWUgRGF0ZVRpbWUsIEFzT2YgRGF0ZVRpbWUpOglkYXlzIGJldHdlZW4gVG9EYXRlKEJpcnRoRGF0ZVRpbWUpYW5kIFRvRGF0ZShBc09mKWRlZmluZSBmdW5jdGlvbiAiQ2FsZW5kYXJBZ2VJbkRheXMiKEJpcnRoRGF0ZVRpbWUgRGF0ZVRpbWUpOglDYWxlbmRhckFnZUluRGF5c0F0KEJpcnRoRGF0ZVRpbWUsIFRvZGF5KCkpZGVmaW5lIGZ1bmN0aW9uICJDYWxlbmRhckFnZUluTW9udGhzQXQiKEJpcnRoRGF0ZVRpbWUgRGF0ZVRpbWUsIEFzT2YgRGF0ZVRpbWUpOgltb250aHMgYmV0d2VlbiBUb0RhdGUoQmlydGhEYXRlVGltZSlhbmQgVG9EYXRlKEFzT2YpZGVmaW5lIGZ1bmN0aW9uICJDYWxlbmRhckFnZUluTW9udGhzIihCaXJ0aERhdGVUaW1lIERhdGVUaW1lKToJQ2FsZW5kYXJBZ2VJbk1vbnRoc0F0KEJpcnRoRGF0ZVRpbWUsIFRvZGF5KCkpZGVmaW5lIGZ1bmN0aW9uICJDYWxlbmRhckFnZUluWWVhcnNBdCIoQmlydGhEYXRlVGltZSBEYXRlVGltZSwgQXNPZiBEYXRlVGltZSk6CXllYXJzIGJldHdlZW4gVG9EYXRlKEJpcnRoRGF0ZVRpbWUpYW5kIFRvRGF0ZShBc09mKWRlZmluZSBmdW5jdGlvbiAiQ2FsZW5kYXJBZ2VJblllYXJzIihCaXJ0aERhdGVUaW1lIERhdGVUaW1lKToJQ2FsZW5kYXJBZ2VJblllYXJzQXQoQmlydGhEYXRlVGltZSwgVG9kYXkoKSlkZWZpbmUgZnVuY3Rpb24gIkxlbmd0aEluRGF5cyIoVmFsdWUgSW50ZXJ2YWw8RGF0ZVRpbWU+KToJZGlmZmVyZW5jZSBpbiBkYXlzIGJldHdlZW4gc3RhcnQgb2YgVmFsdWUgYW5kIGVuZCBvZiBWYWx1ZWRlZmluZSBmdW5jdGlvbiAiRUQgVmlzaXQiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6ICAgIHNpbmdsZXRvbiBmcm9tICggICAgICAgIFtFbmNvdW50ZXI6ICJFbWVyZ2VuY3kgRGVwYXJ0bWVudCBWaXNpdCJdIEVEVmlzaXQgICAgICAgICAgICB3aGVyZSBFRFZpc2l0LnN0YXR1cyA9ICdmaW5pc2hlZCcgICAgICAgICAgICAgICAgYW5kIEVEVmlzaXQucGVyaW9kIGVuZHMgMSBob3VyIG9yIGxlc3Mgb24gb3IgYmVmb3JlIHN0YXJ0IG9mIEZISVJIZWxwZXJzLlRvSW50ZXJ2YWwoVGhlRW5jb3VudGVyLnBlcmlvZCkgICAgKWRlZmluZSBmdW5jdGlvbiAiSG9zcGl0YWxpemF0aW9uIihUaGVFbmNvdW50ZXIgRkhJUi5FbmNvdW50ZXIpOgkoICJFRCBWaXNpdCIoVGhlRW5jb3VudGVyKSApIFggICAgcmV0dXJuICAgICAgICBpZiBYIGlzIG51bGwgdGhlbiBUaGVFbmNvdW50ZXIucGVyaW9kICAgICAgICBlbHNlIEludGVydmFsW3N0YXJ0IG9mIEZISVJIZWxwZXJzLlRvSW50ZXJ2YWwoWC5wZXJpb2QpLCBlbmQgb2YgRkhJUkhlbHBlcnMuVG9JbnRlcnZhbChUaGVFbmNvdW50ZXIucGVyaW9kKV1kZWZpbmUgZnVuY3Rpb24gIkhvc3BpdGFsaXphdGlvbiBMb2NhdGlvbnMiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6CSggIkVEIFZpc2l0IihUaGVFbmNvdW50ZXIpICkgRURFbmNvdW50ZXIgICAgcmV0dXJuICAgICAgICBpZiBFREVuY291bnRlciBpcyBudWxsIHRoZW4gVGhlRW5jb3VudGVyLmxvY2F0aW9uICAgICAgICBlbHNlIGZsYXR0ZW4geyBFREVuY291bnRlci5sb2NhdGlvbiwgVGhlRW5jb3VudGVyLmxvY2F0aW9uIH1kZWZpbmUgZnVuY3Rpb24gIkhvc3BpdGFsaXphdGlvbiBMZW5ndGggb2YgU3RheSIoVGhlRW5jb3VudGVyIEZISVIuRW5jb3VudGVyKToJTGVuZ3RoSW5EYXlzKCJIb3NwaXRhbGl6YXRpb24iKFRoZUVuY291bnRlcikpZGVmaW5lIGZ1bmN0aW9uICJIb3NwaXRhbCBBZG1pc3Npb24gVGltZSIoVGhlRW5jb3VudGVyIEZISVIuRW5jb3VudGVyKToJc3RhcnQgb2YgIkhvc3BpdGFsaXphdGlvbiIoVGhlRW5jb3VudGVyKWRlZmluZSBmdW5jdGlvbiAiSG9zcGl0YWwgRGlzY2hhcmdlIFRpbWUiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6CWVuZCBvZiBGSElSSGVscGVycy5Ub0ludGVydmFsKFRoZUVuY291bnRlci5wZXJpb2QpZGVmaW5lIGZ1bmN0aW9uICJIb3NwaXRhbCBBcnJpdmFsIFRpbWUiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6CXN0YXJ0IG9mIEZISVJIZWxwZXJzLlRvSW50ZXJ2YWwoRmlyc3QoCSAgICAoICJIb3NwaXRhbGl6YXRpb24gTG9jYXRpb25zIihUaGVFbmNvdW50ZXIpICkgSG9zcGl0YWxMb2NhdGlvbgkJCXNvcnQgYnkgc3RhcnQgb2YgRkhJUkhlbHBlcnMuVG9JbnRlcnZhbChwZXJpb2QpCSkucGVyaW9kKS8vIFRPRE8gLSBmaXggdGhlc2UgKG11c3QgZmV0Y2ggTG9jYXRpb24gcmVzb3VyY2VzIGFuZCBjb21wYXJlIGlkIHRvIHJlZmVyZW5jZSkvKmRlZmluZSBmdW5jdGlvbiAiSG9zcGl0YWwgRGVwYXJ0dXJlIFRpbWUiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6CWVuZCBvZiBGSElSSGVscGVycy5Ub0ludGVydmFsKExhc3QoCSAgICAoICJIb3NwaXRhbGl6YXRpb24gTG9jYXRpb25zIihUaGVFbmNvdW50ZXIpICkgSG9zcGl0YWxMb2NhdGlvbgkJCXNvcnQgYnkgc3RhcnQgb2YgRkhJUkhlbHBlcnMuVG9JbnRlcnZhbChwZXJpb2QpCSkucGVyaW9kKWRlZmluZSBmdW5jdGlvbiAiRW1lcmdlbmN5IERlcGFydG1lbnQgQXJyaXZhbCBUaW1lIihUaGVFbmNvdW50ZXIgRkhJUi5FbmNvdW50ZXIpOglzdGFydCBvZiBGSElSSGVscGVycy5Ub0ludGVydmFsKCgJICAgIHNpbmdsZXRvbiBmcm9tICgJICAgICAgICAoICJIb3NwaXRhbGl6YXRpb24gTG9jYXRpb25zIihUaGVFbmNvdW50ZXIpICkgSG9zcGl0YWxMb2NhdGlvbgkJCQl3aGVyZSBIb3NwaXRhbExvY2F0aW9uLnR5cGUgfiAiRVIiCQkpCSkucGVyaW9kKWRlZmluZSBmdW5jdGlvbiAiRmlyc3QgSW5wYXRpZW50IEludGVuc2l2ZSBDYXJlIFVuaXQiKFRoZUVuY291bnRlciBGSElSLkVuY291bnRlcik6CUZpcnN0KAkgICAgKCBUaGVFbmNvdW50ZXIubG9jYXRpb24gKSBIb3NwaXRhbExvY2F0aW9uCQkJd2hlcmUgSG9zcGl0YWxMb2NhdGlvbi50eXBlIH4gIklDVSIJCQkJYW5kIEhvc3BpdGFsTG9jYXRpb24ucGVyaW9kIGR1cmluZyBUaGVFbmNvdW50ZXIucGVyaW9kCQkJc29ydCBieSBzdGFydCBvZiBGSElSSGVscGVycy5Ub0ludGVydmFsKHBlcmlvZCkJKSovLyoqKiAgICBDUUZNZWFzdXJlcyBDb21tb24gTG9naWMqKi9kZWZpbmUgZnVuY3Rpb24gIk5vcm1hbGl6ZSBPbnNldCIob25zZXQgQ2hvaWNlPEZISVIuZGF0ZVRpbWUsIEZISVIuQWdlLCBGSElSLlBlcmlvZCwgRkhJUi5SYW5nZSwgRkhJUi5zdHJpbmc+KTogIGlmIG9uc2V0IGlzIEZISVIuZGF0ZVRpbWUgdGhlbiBJbnRlcnZhbFtvbnNldC52YWx1ZSwgb25zZXQudmFsdWVdCWVsc2UgaWYgb25zZXQgaXMgRkhJUi5QZXJpb2QgdGhlbiBGSElSSGVscGVycy5Ub0ludGVydmFsKG9uc2V0IGFzIEZISVIuUGVyaW9kKQllbHNlIG51bGxkZWZpbmUgZnVuY3Rpb24gIkdldCBDaG9pY2UgSW50ZXJ2YWwgLSBkYXRlVGltZSBvciBQZXJpb2QiKHBlcmZvcm1lZCBDaG9pY2U8RkhJUi5kYXRlVGltZSxGSElSLlBlcmlvZD4pOglpZiBwZXJmb3JtZWQgaXMgRkhJUi5kYXRlVGltZSB0aGVuIEludGVydmFsW3BlcmZvcm1lZC52YWx1ZSwgcGVyZm9ybWVkLnZhbHVlXQllbHNlIEZISVJIZWxwZXJzLlRvSW50ZXJ2YWwocGVyZm9ybWVkIGFzIEZISVIuUGVyaW9kKQ=="
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Library/library-mat-global-common-functions-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Measure",
        "id": "measure-cms124-FHIR",
        "url": "http://hl7.org/fhir/us/cqfmeasures/Measure/measure-cms124-FHIR",
        "identifier": [
          {
            "use": "official",
            "system": "http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/cms",
            "value": "130"
          },
          {
            "use": "official",
            "system": "http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/nqf",
            "value": "0034"
          }
        ],
        "version": "7.2.000",
        "name": "CMS124",
        "title": "Cervical Cancer Screening",
        "status": "active",
        "experimental": true,
        "date": "2018-09-17",
        "publisher": "National Committee for Quality Assurance",
        "description": "Percentage of women 21-64 years of age who were screened for cervical cancer using either of the following criteria: <br> *  Women age 21-64 who had cervical cytology performed every 3 years <br.*  Women age 30-64 who had cervical cytology/human papillomavirus (HPV) co-testing performed every 5 years ",
        "purpose": "Women 23-64 years of age with a visit during the measurement period",
        "approvalDate": "2016-01-01",
        "lastReviewDate": "2016-09-01",
        "effectivePeriod": {
          "start": "2018-01-01",
          "end": "2018-12-31"
        },
        "useContext": [
          {
            "code": {
              "code": "program"
            },
            "valueCodeableConcept": {
              "text": "eligibile-provider"
            }
          }
        ],
        "jurisdiction": [
          {
            "coding": [
              {
                "system": "urn:iso:std:iso:3166",
                "code": "US"
              }
            ]
          }
        ],
        "topic": [
          {
            "coding": [
              {
                "system": "http://hl7.org/fhir/c80-doc-typecodes",
                "code": "57024-2"
              }
            ]
          }
        ],
        "contributor": [
          {
            "type": "author",
            "name": "National Committee for Quality Assurance"
          }
        ],
        "contact": [
          {
            "telecom": [
              {
                "system": "url",
                "value": "http://www.ncqa.org/"
              }
            ]
          }
        ],
        "copyright": "This Physician Performance Measure (Measure) and related data specifications were developed by the National Committee for Quality Assurance (NCQA). NCQA is not responsible for any use of the Measure. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measures or specifications. NCQA holds a copyright in the Measure. The Measure can be reproduced and distributed, without modification, for noncommercial purposes (eg, use by healthcare providers in connection with their practices) without obtaining approval from NCQA. Commercial use is defined as the sale, licensing, or distribution of the Measure for commercial gain, or incorporation of the Measure into a product or service that is sold, licensed or distributed for commercial gain. All commercial uses or requests for modification must be approved by NCQA and are subject to a license at the discretion of NCQA. (C) 2012-2017 National Committee for Quality Assurance. All Rights Reserved. <br> Limited proprietary coding is contained in the Measure specifications for user convenience. Users of proprietary code sets should obtain all necessary licenses from the owners of the code sets. NCQA disclaims all liability for use or accuracy of any third party codes contained in the specifications. <br> CPT(R) contained in the Measure specifications is copyright 2004-2017 American Medical Association. LOINC(R) copyright 2004-2017 Regenstrief Institute, Inc. This material contains SNOMED Clinical Terms(R) (SNOMED CT[R] ) copyright 2004-2017 International Health Terminology Standards Development Organisation. ICD-10 copyright 2017 World Health Organization. All Rights Reserved.",
        "relatedArtifact": [
          {
            "type": "citation",
            "citation": "Howlader, N., Noone, A.M., Krapcho, M., Miller, D., Bishop, K., Altekruse, S.F., Kosary, C.L., Yu, M., Ruhl, J., Tatalovich, Z., Mariotto, A., Lewis, D.R., Chen, H.S., Feuer, E.J., and Cronin, K.A. 2016. \"SEER Cancer Statistics Review, 1975-2013.\" National Cancer Institute. (December 5, 2016) http://seer.cancer.gov/csr/1975_2013/"
          },
          {
             "type": "citation",
            "citation": "National Business Group on Health. 2011. \"Pathways to Managing Cancer in the Workplace.\" (May 8, 2012). http://www.tcyh.org/employers/downloads/Pathways_Managing_Cancer_2011.pdf"

          },
          {
             "type": "citation",
            "citation": "Feig S. 2011. Comparison of Costs and Benefits of Breast Cancer Screening with Mammography, Ultrasonagraphy, and MRI. Obstetrics and Gynecology Clinics of North America. 38(1):179-96."

          },
          {
             "type": "citation",
            "citation": "U.S. Preventive Services Task Force (USPSTF). 2016. \"Screening for Breast Cancer: U.S. Preventive Services Task Force Recommendation Statement.\" Ann Intern Med. 164(4):279-296. doi:10.7326/M15-2886."

          }
        ],
        "library": [
          {
            "reference": "Library/library-cms124-FHIR"
          }
        ],
        "disclaimer": "The performance Measure is not a clinical guideline and does not establish a standard of medical care, and has not been tested for all potential applications. THE MEASURE AND SPECIFICATIONS ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND. <br> Due to technical limitations, registered trademarks are indicated by (R) or [R] and unregistered trademarks are indicated by (TM) or [TM].",
        "scoring": {
          "coding": [
            {
              "code": "proportion"
            }
          ]
        },
        "type": [
          {
            "coding": [
              {
                "code": "process"
              }
            ]
          }
        ],
        "rationale": "Breast cancer is one of the most common types of cancers, accounting for 15 percent of all new cancer diagnoses in the U.S. (Howlader et al, 2016). In 2013, over 3 million women were estimated to be living with breast cancer in the U.S. and it is estimated that 12 percent of women will be diagnosed with breast cancer at some point during their lifetime (Howlader et al, 2016). <br> While there are other factors that affect a woman's risk of developing breast cancer, advancing age is a primary risk factor. Breast cancer is most frequently diagnosed among women ages 55-64; the median age at diagnosis is 62 years (Howlader et al, 2016). The chance of a woman being diagnosed with breast cancer in a given year increases with age. By age 40, the chances are 1 in 235; by age 50 it becomes 1 in 54; by age 60, it is 1 in 25 (National Business Group on Health, 2011). <br> In the U.S., costs associated with a diagnosis of breast cancer range from $451 to $2,520, factoring in continued testing, multiple office visits and procedures. The total costs related to breast cancer add up to nearly $7 billion per year in the U.S., including $2 billion spent on late-stage treatment (National Business Group on Health, 2011). If breast cancer is detected through mammography screening and diagnosed in its earliest stages, treatment may be less expensive (Feig, 2011).",
        "clinicalRecommendationStatement": "The U.S. Preventive Services Task Force (USPSTF) recommends biennial screening mammography for women aged 50-74 years (B recommendation).  <br> The decision to start screening mammography in women prior to age 50 years should be an individual one. Women who place a higher value on the potential benefit than the potential harms may choose to begin biennial screening between the ages of 40 and 49 years (C recommendation). (USPSTF, 2016) <br> The USPSTF concludes that the current evidence is insufficient to assess the balance of benefits and harms of screening mammography in women aged 75 years or older (I statement). (USPSTF, 2016) <br> The USPSTF concludes that the current evidence is insufficient to assess the benefits and harms of digital breast tomosynthesis (DBT) as a primary screening method for breast cancer (I Statement). (USPSTF, 2016)  <br> The USPSTF concludes that the current evidence is insufficient to assess the balance of benefits and harms of adjunctive screening for breast cancer using breast ultrasonography, magnetic resonance imaging, DBT, or other methods in women identified to have dense breasts on an otherwise negative screening mammogram (I statement). (USPSTF, 2016)",
        "improvementNotation": "Higher score equals better quality",
        "guidance": "To ensure the measure is only looking for a cervical cytology test only after a woman turns 21 years of age, the youngest age in the initial population is 23. <br> Patient self-report for procedures as well as diagnostic studies should be recorded in 'Procedure, Performed' template or 'Diagnostic Study, Performed' template in QRDA-1. <br> Include only cytology and HPV \"co-testing\"; in co-testing, both cytology and HPV tests are performed (i.e., the samples are collected and both tests are ordered, regardless of the cytology result) on the same date of service. Do not include reflex testing. In addition, if the medical record indicates the HPV test was performed only after determining the cytology result, this is considered reflex testing and does not meet criteria for the measure.",
        "group": [
          {
            "identifier": {
              "value": "CMS124-group-1"
            },
            "population": [
              {
                "identifier": {
                  "value": "initial-population-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "initial-population"
                    }
                  ]
                },
                "criteria": "Initial Population"
              },
              {
                "identifier": {
                  "value": "numerator-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "numerator"
                    }
                  ]
                },
                "criteria": "Numerator"
              },
              {
                "identifier": {
                  "value": "denominator-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "denominator"
                    }
                  ]
                },
                "criteria": "Denominator"
              },
              {
                "identifier": {
                  "value": "denominator-exclusions-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "denominator-exclusion"
                    }
                  ]
                },
                "criteria": "Denominator Exclusion"
                  }
                ]
              }
            ],
        "supplementalData": [
          {
            "identifier": {
              "value": "supplemental-data-race"
            },
            "criteria": "SDE Race"
          },
          {
            "identifier": {
              "value": "supplemental-data-payer"
            },
            "criteria": "SDE Payer"
          },
          {
            "identifier": {
              "value": "supplemental-data-ethnicity"
            },
            "criteria": "SDE Ethnicity"
          },
          {
            "identifier": {
              "value": "supplemental-data-birthSex"
            },
            "criteria": "SDE Sex"
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Measure/measure-cms124-FHIR"
      }
    },
    {
      "resource": {
        "resourceType": "Measure",
        "id": "measure-cms125-FHIR",
        "text": {
          "status": "additional",
          "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><td><b>Id: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">Measure/measure-cms125</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Identifier: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>system: </b><span>http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/cms</span></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>value: </b><span>122</span></td></tr></table><table class=\"grid dict\"><tr><td><b>Identifier: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>system: </b><span>http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/nqf</span></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>value: </b><span>0002</span></td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Title: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">Diabetes: Hemoglobin A1c (HbA1c) Poor Control (> 9%)</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Status: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Description: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">Percentage of patients 18-75 years of age with diabetes who had hemoglobin A1c &gt; 9.0% during the measurement period</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Purpose: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">TO-DO:add purpose</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Topic: </b></td></tr><tr><td style=\"padding-right: 25px;\"><span><span><span style=\"padding-left: 25px;\"><b>system: </b><span>http://hl7.org/fhir/c80-doc-typecodes</span><br/></span><span style=\"padding-left: 25px;\"><b>code: </b><span>57024-2</span><br/></span></span></span></td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Library: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>reference: </b><span>Library/library-cms125</span></td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Scoring: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">proportion</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Type: </b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\">process</td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Group:</b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>cms125-group-1</span><br/></span></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Population:</b><br/><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>type:</b><span>initial-population</span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>initial-population-identifier</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>cms125.InitialPopulation</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Population:</b><br/><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>type:</b><span>numerator</span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>numerator-identifier</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>cms125.InNumerator</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Population:</b><br/><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>type:</b><span>denominator</span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>denominator-identifier</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>cms125.InDenominator</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Population:</b><br/><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>type:</b><span>denominator-exclusion</span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>denominator-exclusions-identifier</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>cms125.InDenominatorExclusions</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Stratifier:</b><br/><p style=\"padding-left: 25px; margin-bottom: 5px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>stratifier-ages-up-to-9</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>CMS146.AgesUpToNine</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Stratifier:</b><br/><p style=\"padding-left: 25px; margin-bottom: 5px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>stratifier-ages-10-plus</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>criteria: </b><span>CMS146.AgesTenPlus</span></p></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><b>Stratifier:</b><br/><p style=\"padding-left: 25px; margin-bottom: 5px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>stratifier-ages-up-to-9</span><br/></span></p><p style=\"margin-bottom: 5px; padding-left: 25px;\"><b>path: </b><span>Patient.gender</span></p></td></tr></table><p/><table class=\"grid dict\"><tr><td><b>Supplemental Data:</b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>supplemental-data-gender</span><br/></span></p><p style=\"margin-bottom: 5px;\"><b>path: </b><span>Patient.gender</span></p></td></tr></table><table class=\"grid dict\"><tr><td><b>Supplemental Data:</b></td></tr><tr><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>Identifier:</b><br/><span style=\"padding-left: 25px;\"><b>value: </b><span>supplemental-data-deceased</span><br/></span></p><p style=\"margin-bottom: 5px;\"><b>path: </b><span>deceasedBoolean</span></p></td></tr></table></div>"
        },
        "url": "http://hl7.org/fhir/us/cqfmeasures/Measure/measure-cms125-FHIR",
        "identifier": [
          {
            "use": "official",
            "system": "http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/cms",
            "value": "146"
          },
          {
            "use": "official",
            "system": "http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/nqf",
            "value": "0002"
          }
        ],
        "version": "6.2.000",
        "name": "CMS125",
        "title": "Breast Cancer Screening",
        "status": "active",
        "experimental": true,
        "date": "2018-08-31",
        "publisher": "National Committee for Quality Assurance",
        "description": "Percentage of women 50-74 years of age who had a mammogram to screen for breast cancer",
        "purpose": "Women 51-74 years of age with a visit during the measurement period",
        "effectivePeriod": {
          "start": "2018-01-01",
          "end": "2018-12-31"
        },
        "useContext": [
          {
            "code": {
              "code": "program"
            },
            "valueCodeableConcept": {
              "text": "eligibile-provider"
            }
          }
        ],
        "jurisdiction": [
          {
            "coding": [
              {
                "system": "urn:iso:std:iso:3166",
                "code": "US"
              }
            ]
          }
        ],
        "topic": [
          {
            "coding": [
              {
                "system": "http://hl7.org/fhir/c80-doc-typecodes",
                "code": "57024-2"
              }
            ]
          }
        ],
        "contributor": [
          {
            "type": "author",
            "name": "National Committee for Quality Assurance"
          }
        ],
        "contact": [
          {
            "telecom": [
              {
                "system": "url",
                "value": "http://www.ncqa.org/"
              }
            ]
          }
        ],
        "copyright": "This Physician Performance Measure (Measure) and related data specifications were developed by the National Committee for Quality Assurance (NCQA). The Measure is copyrighted but can be reproduced and distributed, without modification, for noncommercial purposes (eg, use by healthcare providers in connection with their practices) without obtaining approval from NCQA. Commercial use is defined as the sale, licensing, or distribution of the Measure for commercial gain, or incorporation of the Measure into a product or service that is sold, licensed or distributed for commercial gain. All commercial uses must be approved by NCQA and are subject to a license at the discretion of NCQA. NCQA is not responsible for any use of the Measure. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measures or specifications. (C) 2012-2017 National Committee for Quality Assurance. All Rights Reserved. <br>  Limited proprietary coding is contained in the Measure specifications for user convenience. Users of proprietary code sets should obtain all necessary licenses from the owners of the code sets. NCQA disclaims all liability for use or accuracy of any CPT or other codes contained in the specifications. <br> CPT(R) contained in the Measure specifications is copyright 2004-2016 American Medical Association. LOINC(R) copyright 2004-2016 Regenstrief Institute, Inc. This material contains SNOMED Clinical Terms(R) (SNOMED CT[R]) copyright 2004-2016 International Health Terminology Standards Development Organisation. ICD-10 copyright 2016 World Health Organization. All Rights Reserved. <br> The American Hospital Association holds a copyright to the National Uniform Billing Committee (NUBC) codes contained in the measure specifications. The NUBC codes in the specifications are included with the permission of the AHA. The NUBC codes contained in the specifications may be used by health plans and other health care delivery organizations for the purpose of calculating and reporting Measure results or using Measure results for their internal quality improvement purposes. All other uses of the NUBC codes require a license from the AHA. Anyone desiring to use the NUBC codes in a commercial product to generate Measure results, or for any other commercial use, must obtain a commercial use license directly from the AHA. To inquire about licensing, contact ub04@healthforum.com.",
        "relatedArtifact": [
          {
            "type": "citation",
            "citation": "American Cancer Society. 2010. Cancer Facts & Figures 2010. Atlanta: American Cancer Society."
          },
          {
            "type": "citation",
            "citation": "National Cancer Institute. 2010. \"Breast Cancer Screening.\" http://www.cancer.gov/cancertopics/pdq/screening/breast/healthprofessional"
          },
          {
            "type": "citation",
            "citation": "National Business Group on Health. 2011. Pathways to Managing Cancer in the Workplace. Washington: National Business Group on Health. "
          },
          {
            "type": "citation",
            "citation": "U.S. Preventive Services Task Force (USPSTF). 2009. 1) \"Screening for breast cancer: U.S. Preventive Services Task Force recommendation statement.\" 2) \"December 2009 addendum.\" Ann Intern Med 151(10):716-726."
          },
          {
            "type": "citation",
            "citation": "BreastCancer.org. 2012. U.S. Breast Cancer Statistics. www.breastcancer.org/symptoms/understand_bc/statistics.jsp"
          }
        ],
        "library": [
          {
            "reference": "Library/library-cms125-FHIR"
          }
        ],
        "disclaimer": "The performance Measure is not a clinical guideline and does not establish a standard of medical care, and has not been tested for all potential applications. THE MEASURE AND SPECIFICATIONS ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND.",
        "scoring": {
          "coding": [
            {
              "code": "proportion"
            }
          ]
        },
        "type": [
          {
            "coding": [
              {
                "code": "process"
              }
            ]
          }
        ],
        "rationale": "Breast cancer is one of the most common types of cancers, accounting for a quarter of all new cancer diagnoses for women in the U.S. (BreastCancer.Org, 2011). It ranks as the second leading cause of cancer-related mortality in women, accounting for nearly 40,000 estimated deaths in 2013 (American Cancer Society, 2011). <br> According to the National Cancer Institute's Surveillance Epidemiology and End Results program, the chance of a woman being diagnosed with breast cancer in a given year increases with age. By age 30, it is one in 2,212. By age 40, the chances increase to one in 235, by age 50, it becomes one in 54, and, by age 60, it is one in 25. From 2004 to 2008, the median age at the time of breast cancer diagnosis was 61 years among adult women (Tangka et al, 2010). <br> In the U.S., costs associated with a diagnosis of breast cancer range from $451 to $2,520, factoring in continued testing, multiple office visits, and varying procedures. The total costs related to breast cancer add up to nearly $7 billion per year in the U.S., including $2 billion spent on late-stage treatment (Lavigne et al, 2008; Boykoff et al, 2009).",
        "clinicalRecommendationStatement": "The U.S. Preventive Services Task Force (USPSTF) recommends biennial screening mammography for women aged 50-74 years (B recommendation). The decision to start regular, biennial screening mammography before the age of 50 years should be an individual one and take patient context into account, including the patient's values regarding specific benefits and harms (C recommendation). The Task Force concludes the evidence is insufficient to assess the additional benefits and harms of screening mammography in women 75 years and older (I statement). <br> U.S. Preventive Services Task Force (2009) <br> Grade: B recommendation. The USPSTF recommends biennial screening mammography for women aged 50 to 74 years. <br> Grade: C recommendation. The decision to start regular, biennial screening mammography before the age of 50 years should be an individual one and take patient context into account, including the patient's values regarding specific benefits and harms. <br> Grade: I Statement. The USPSTF concludes that the current evidence is insufficient to assess the additional benefits and harms of screening mammography in women 75 years or older. <br> Grade: D recommendation. The USPSTF recommends against teaching breast self-examination (BSE). <br> Grade: I Statement. The USPSTF concludes that the current evidence is insufficient to assess the additional benefits and harms of clinical breast examination (CBE) beyond screening mammography in women 40 years or older. <br> Grade: I Statement. The USPSTF concludes that the current evidence is insufficient to assess the additional benefits and harms of either digital mammography or magnetic resonance imaging (MRI) instead of film mammography as screening modalities for breast cancer.",
        "improvementNotation": "Higher score equals better quality",
        "guidance": "Patient self-report for procedures as well as diagnostic studies should be recorded in 'Procedure, Performed' template or 'Diagnostic Study, Performed' template in QRDA-1. Patient self-report is not allowed for laboratory tests. <br> This measure evaluates primary screening. Do not count biopsies, breast ultrasounds, MRIs or tomosynthesis (3D mammography), because they are not appropriate methods for primary breast cancer screening.",
        "group": [
          {
            "identifier": {
              "value": "CMS125-group-1"
            },
            "population": [
              {
                "identifier": {
                  "value": "initial-population-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "initial-population"
                    }
                  ]
                },
                "criteria": "Initial Population"
              },
              {
                "identifier": {
                  "value": "numerator-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "numerator"
                    }
                  ]
                },
                "criteria": "Numerator"
              },
              {
                "identifier": {
                  "value": "denominator-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "denominator"
                    }
                  ]
                },
                "criteria": "Denominator"
              },
              {
                "identifier": {
                  "value": "denominator-exclusions-identifier"
                },
                "code": {
                  "coding": [
                    {
                      "code": "denominator-exclusion"
                    }
                  ]
                },
                "criteria": "Denominator Exclusion"
              }
            ]
          }
        ],
        "supplementalData": [
          {
            "identifier": {
              "value": "supplemental-data-race"
            },
            "criteria": "SDE Race"
          },
          {
            "identifier": {
              "value": "supplemental-data-payer"
            },
            "criteria": "SDE Payer"
          },
          {
            "identifier": {
              "value": "supplemental-data-ethnicity"
            },
            "criteria": "SDE Ethnicity"
          },
          {
            "identifier": {
              "value": "supplemental-data-birthSex"
            },
            "criteria": "SDE Sex"
          }
        ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Measure/measure-cms125-FHIR"
      }
    },
    {
      "resource": {
         "resourceType":"Measure",
         "id":"measure-cms130-FHIR",
         "url":"http://hl7.org/fhir/us/cqfmeasures/Measure/measure-cms130-FHIR",
         "identifier":[
            {
               "use":"official",
               "system":"http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/cms",
               "value":"130"
            },
            {
               "use":"official",
               "system":"http://hl7.org/fhir/cqi/ecqm/Measure/Identifier/nqf",
               "value":"0034"
            }
         ],
         "version":"7.2.000",
         "name":"CMS130",
         "title":"Colorectal Cancer Screening",
         "status":"active",
         "experimental":true,
         "date":"2018-08-28",
         "publisher":"National Committee for Quality Assurance",
         "description":"Percentage of adults 50-75 years of age who had appropriate screening for colorectal cancer",
         "purpose":"Patients 50-75 years of age with a visit during the measurement period",
         "approvalDate":"2016-01-01",
         "lastReviewDate":"2016-09-01",
         "effectivePeriod":{
            "start":"2018-01-01",
            "end":"2018-12-31"
         },
         "useContext":[
            {
               "code":{
                  "code":"program"
               },
               "valueCodeableConcept":{
                  "text":"eligibile-provider"
               }
            }
         ],
         "jurisdiction":[
            {
               "coding":[
                  {
                     "system":"urn:iso:std:iso:3166",
                     "code":"US"
                  }
               ]
            }
         ],
         "topic":[
            {
               "coding":[
                  {
                     "system":"http://hl7.org/fhir/c80-doc-typecodes",
                     "code":"57024-2"
                  }
               ]
            }
         ],
         "contributor":[
            {
               "type":"author",
               "name":"National Committee for Quality Assurance"
            }
         ],
         "contact":[
            {
               "telecom":[
                  {
                     "system":"url",
                     "value":"http://www.ncqa.org/"
                  }
               ]
            }
         ],
         "copyright":"This Physician Performance Measure (Measure) and related data specifications were developed by the National Committee for Quality Assurance (NCQA). NCQA is not responsible for any use of the Measure. NCQA makes no representations, warranties, or endorsement about the quality of any organization or physician that uses or reports performance measures and NCQA has no liability to anyone who relies on such measures or specifications. NCQA holds a copyright in the Measure. The Measure can be reproduced and distributed, without modification, for noncommercial purposes (eg, use by healthcare providers in connection with their practices) without obtaining approval from NCQA. Commercial use is defined as the sale, licensing, or distribution of the Measure for commercial gain, or incorporation of the Measure into a product or service that is sold, licensed or distributed for commercial gain. All commercial uses or requests for modification must be approved by NCQA and are subject to a license at the discretion of NCQA. (C) 2012-2017 National Committee for Quality Assurance. All Rights Reserved. Limited proprietary coding is contained in the Measure specifications for user convenience. Users of proprietary code sets should obtain all necessary licenses from the owners of the code sets. NCQA disclaims all liability for use or accuracy of any third party codes contained in the specifications. CPT(R) contained in the Measure specifications is copyright 2004-2017 American Medical Association. LOINC(R) copyright 2004-2017 Regenstrief Institute, Inc. This material contains SNOMED Clinical Terms(R) (SNOMED CT[R] ) copyright 2004-2017 International Health Terminology Standards Development Organisation. ICD-10 copyright 2017 World Health Organization. All Rights Reserved.",
         "relatedArtifact":[
            {
               "type":"citation",
               "citation":"U.S. Preventive Services Task Force. \"Screening for Colorectal Cancer: U.S. Preventive Services Task Force Recommendation Statement.\" JAMA, vol. 315, no. 23, 2016, pp. 2564-2575. doi: 10.1001/jama.2016.5989 "
            },
            {
               "type":"citation",
               "citation":"Howlader, N., A.M. Noone, M. Krapcho, D. Miller, K. Bishop, C.L. Kosary, M. Yu, J. Ruhl, Z. Tatalovich, A. Mariotto, D.R. Lewis, H.S. Chen, E.J. Feuer, and K.A. Cronin. \"SEER Cancer Statistics Review, 1975-2014.\" Washington, DC: National Cancer Institute, 2017. Available at https://seer.cancer.gov/csr/1975_2014/ "
            },
            {
               "type":"citation",
               "citation":"American Cancer Society. \"Can Colorectal Polyps and Cancer Be Found Early?\" Last modified March 2017. Washington, DC: American Cancer Society. Available at https://www.cancer.org/cancer/colon-rectal-cancer/detection-diagnosis-staging/detection.html. "
            }
         ],
         "library":[
            {
               "reference":"Library/library-cms130-FHIR"
            }
         ],
         "disclaimer":"The performance Measure is not a clinical guideline and does not establish a standard of medical care, and has not been tested for all potential applications. THE MEASURE AND SPECIFICATIONS ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND. Due to technical limitations, registered trademarks are indicated by (R) or [R] and unregistered trademarks are indicated by (TM) or [TM].",
         "scoring":{
            "coding":[
               {
                  "code":"proportion"
               }
            ]
         },
         "type":[
            {
               "coding":[
                  {
                     "code":"process"
                  }
               ]
            }
         ],
         "rationale":"Colorectal cancer represents 8 percent of all new cancer cases and is the second leading cause of cancer deaths in the United States. In 2017, there were an estimated 135,430 new cases of colorectal cancer and an estimated 50,260 deaths attributed to it. According to the National Cancer Institute, about 4.3 percent of men and women will be diagnosed with colorectal cancer at some point during their lifetimes. For most adults, older age is the most important risk factor for colorectal cancer, although being male and black are also associated with higher incidence and mortality. Colorectal cancer is most frequently diagnosed among people 65 to 74 years old (Howlader et al. 2017). Screening can be effective for finding precancerous lesions (polyps) that could later become malignant, and for detecting early cancers that can be more easily and effectively treated. Precancerous polyps usually take about 10 to 15 years to develop into colorectal cancer, and most can be found and removed before turning into cancer. The five-year relative survival rate for people whose colorectal cancer is found in the early stage before it has spread is about 90 percent (American Cancer Society 2017).",
         "clinicalRecommendationStatement":"The U. S. Preventive Services Task Force (2016) recommends screening for colorectal cancer starting at age 50 years and continuing until age 75 years. This is a Grade A recommendation (U.S. Preventive Services Task Force 2016). Screening tests: -Colonoscopy (every 10 years) -Flexible sigmoidoscopy (every 5 years) -Fecal occult blood test (annually) -FIT-DNA (every 3 years) -Computed tomographic colonography (every 5 years)",
         "improvementNotation":"Higher score indicates better quality",
         "guidance":"Patient self-report for procedures as well as diagnostic studies should be recorded in \"Procedure, Performed\" template or \"Diagnostic Study, Performed\" template in QRDA-1. Do not count DRE, FOBT tests performed in an office setting or performed on a sample collected via DRE.",
         "group":[
            {
               "identifier":{
                  "value":"CMS130-group-1"
               },
               "population":[
                  {
                     "identifier":{
                        "value":"initial-population-identifier"
                     },
                     "code":{
                        "coding":[
                           {
                              "code":"initial-population"
                           }
                        ]
                     },
                     "criteria":"Initial Population"
                  },
                  {
                     "identifier":{
                        "value":"numerator-identifier"
                     },
                     "code":{
                        "coding":[
                           {
                              "code":"numerator"
                           }
                        ]
                     },
                     "criteria":"Numerator"
                  },
                  {
                     "identifier":{
                        "value":"denominator-identifier"
                     },
                     "code":{
                        "coding":[
                           {
                              "code":"denominator"
                           }
                        ]
                     },
                     "criteria":"Denominator"
                  },
                  {
                     "identifier":{
                        "value":"denominator-exclusions-identifier"
                     },
                     "code":{
                        "coding":[
                           {
                              "code":"denominator-exclusion"
                           }
                        ]
                     },
                     "criteria":"Denominator Exclusion"
                  }
               ]
            }
         ],
         "supplementalData":[
            {
               "identifier":{
                  "value":"supplemental-data-race"
               },
               "criteria":"SDE Race"
            },
            {
               "identifier":{
                  "value":"supplemental-data-payer"
               },
               "criteria":"SDE Payer"
            },
            {
               "identifier":{
                  "value":"supplemental-data-ethnicity"
               },
               "criteria":"SDE Ethnicity"
            },
            {
               "identifier":{
                  "value":"supplemental-data-birthSex"
               },
               "criteria":"SDE Sex"
            }
         ]
      },
      "request": {
        "method": "PUT",
        "url": "http://localhost:8080/cqf-ruler/baseDstu3/Measure/measure-cms130-FHIR"
      }
    }
  ]
}
