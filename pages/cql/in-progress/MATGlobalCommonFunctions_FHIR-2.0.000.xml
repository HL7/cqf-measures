<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="MATGlobalCommonFunctions_FHIR" version="2.0.000"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="1" locator="3:1-3:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <includes>
      <def localId="2" locator="5:1-5:54" localIdentifier="FHIRHelpers" path="FHIRHelpers" version="3.0.0"/>
   </includes>
   <parameters>
      <def localId="21" locator="21:1-21:49" name="Measurement Period" accessLevel="Public">
         <parameterTypeSpecifier localId="20" locator="21:32-21:49" xsi:type="IntervalTypeSpecifier">
            <pointType localId="19" locator="21:41-21:48" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <codeSystems>
      <def localId="3" locator="7:1-7:38" name="LOINC" id="http://loinc.org" accessLevel="Public"/>
      <def localId="4" locator="8:1-8:60" name="SNOMEDCT" id="http://snomed.info/sct/731000124108" accessLevel="Public"/>
      <def localId="5" locator="9:1-9:56" name="RoleCode" id="http://hl7.org/fhir/v3/RoleCode" accessLevel="Public"/>
      <def localId="6" locator="10:1-10:65" name="Diagnosis Role" id="http://hl7.org/fhir/diagnosis-role" accessLevel="Public"/>
   </codeSystems>
   <valueSets>
      <def localId="7" locator="12:1-12:101" name="Encounter Inpatient" id="https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307" accessLevel="Public"/>
      <def localId="8" locator="13:1-13:112" name="Emergency Department Visit" id="https://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292" accessLevel="Public"/>
   </valueSets>
   <codes>
      <def localId="10" locator="15:1-15:61" name="Birthdate" id="21112-8" display="Birth date" accessLevel="Public">
         <codeSystem localId="9" locator="15:34-15:40" name="LOINC"/>
      </def>
      <def localId="12" locator="16:1-16:55" name="Dead" id="419099009" display="Dead" accessLevel="Public">
         <codeSystem localId="11" locator="16:31-16:40" name="SNOMEDCT"/>
      </def>
      <def localId="14" locator="17:1-17:56" name="ER" id="ER" display="Emergency room" accessLevel="Public">
         <codeSystem localId="13" locator="17:22-17:31" name="RoleCode"/>
      </def>
      <def localId="16" locator="18:1-18:63" name="ICU" id="ICU" display="Intensive care unit" accessLevel="Public">
         <codeSystem localId="15" locator="18:24-18:33" name="RoleCode"/>
      </def>
      <def localId="18" locator="19:1-19:65" name="Billing" id="billing" display="Billing" accessLevel="Public">
         <codeSystem localId="17" locator="19:32-19:47" name="Diagnosis Role"/>
      </def>
   </codes>
   <statements>
      <def locator="23:1-23:15" name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand locator="23:1-23:15" dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="37" locator="52:1-53:59" name="LengthInDays" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="37">
               <a:s>define function &quot;LengthInDays&quot;(Value </a:s>
               <a:s r="31">
                  <a:s>Interval&lt;</a:s>
                  <a:s r="30">
                     <a:s>DateTime</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="36">
                  <a:s r="36">
                     <a:s>difference in days between </a:s>
                     <a:s r="33">
                        <a:s>start of </a:s>
                        <a:s r="32">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                     <a:s> and </a:s>
                     <a:s r="35">
                        <a:s>end of </a:s>
                        <a:s r="34">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="36" locator="53:2-53:59" precision="Day" xsi:type="DifferenceBetween">
            <operand localId="33" locator="53:29-53:42" xsi:type="Start">
               <operand localId="32" locator="53:38-53:42" name="Value" xsi:type="OperandRef"/>
            </operand>
            <operand localId="35" locator="53:48-53:59" xsi:type="End">
               <operand localId="34" locator="53:55-53:59" name="Value" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="Value">
            <operandTypeSpecifier localId="31" locator="52:38-52:55" xsi:type="IntervalTypeSpecifier">
               <pointType localId="30" locator="52:47-52:54" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="48" locator="25:1-29:65" name="Inpatient Encounter" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="48">
               <a:s>define &quot;Inpatient Encounter&quot;:&#xd;
	</a:s>
               <a:s r="47">
                  <a:s>
                     <a:s r="23">
                        <a:s r="22">
                           <a:s r="22">
                              <a:s>[Encounter: </a:s>
                              <a:s>
                                 <a:s>&quot;Encounter Inpatient&quot;</a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                        <a:s> EncounterInpatient</a:s>
                     </a:s>
                  </a:s>
                  <a:s>&#xd;
		</a:s>
                  <a:s r="46">
                     <a:s>where </a:s>
                     <a:s r="46">
                        <a:s r="41">
                           <a:s r="27">
                              <a:s r="25">
                                 <a:s r="24">
                                    <a:s>EncounterInpatient</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="25">
                                    <a:s>status</a:s>
                                 </a:s>
                              </a:s>
                              <a:s> = </a:s>
                              <a:s r="26">
                                 <a:s>'finished'</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
		    and </a:s>
                           <a:s r="40">
                              <a:s r="38">
                                 <a:s>&quot;LengthInDays&quot;(</a:s>
                                 <a:s r="29">
                                    <a:s r="28">
                                       <a:s>EncounterInpatient</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="29">
                                       <a:s>period</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s r="39"> &lt;= 120</a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
			and </a:s>
                        <a:s r="45">
                           <a:s r="43">
                              <a:s r="42">
                                 <a:s>EncounterInpatient</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="43">
                                 <a:s>period</a:s>
                              </a:s>
                           </a:s>
                           <a:s r="45"> ends during </a:s>
                           <a:s r="44">
                              <a:s>&quot;Measurement Period&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="47" locator="26:2-29:65" xsi:type="Query">
            <source localId="23" locator="26:2-26:54" alias="EncounterInpatient">
               <expression localId="22" locator="26:2-26:35" dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                  <codes name="Encounter Inpatient" xsi:type="ValueSetRef"/>
               </expression>
            </source>
            <where localId="46" locator="27:3-29:65" xsi:type="And">
               <operand localId="41" locator="27:9-28:58" xsi:type="And">
                  <operand localId="27" locator="27:9-27:46" xsi:type="Equal">
                     <operand name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="25" locator="27:9-27:33" path="status" scope="EncounterInpatient" xsi:type="Property"/>
                     </operand>
                     <operand localId="26" locator="27:37-27:46" valueType="t:String" value="finished" xsi:type="Literal"/>
                  </operand>
                  <operand localId="40" locator="28:11-28:58" xsi:type="LessOrEqual">
                     <operand localId="38" locator="28:11-28:51" name="LengthInDays" xsi:type="FunctionRef">
                        <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="29" locator="28:26-28:50" path="period" scope="EncounterInpatient" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand localId="39" locator="28:56-28:58" valueType="t:Integer" value="120" xsi:type="Literal"/>
                  </operand>
               </operand>
               <operand localId="45" locator="29:8-29:65" xsi:type="In">
                  <operand locator="29:34-29:37" xsi:type="End">
                     <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="43" locator="29:8-29:32" path="period" scope="EncounterInpatient" xsi:type="Property"/>
                     </operand>
                  </operand>
                  <operand localId="44" locator="29:46-29:65" name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
            </where>
         </expression>
      </def>
      <def localId="63" locator="31:1-32:93" name="ToDate" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="63">
               <a:s>define function &quot;ToDate&quot;(Value </a:s>
               <a:s r="49">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="62">
                  <a:s r="62">
                     <a:s>DateTime(</a:s>
                     <a:s r="51">
                        <a:s>year from </a:s>
                        <a:s r="50">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s r="53">
                        <a:s>month from </a:s>
                        <a:s r="52">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s r="55">
                        <a:s>day from </a:s>
                        <a:s r="54">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                     <a:s r="56">, 0, 0, 0, 0, </a:s>
                     <a:s r="61">
                        <a:s>timezone from </a:s>
                        <a:s r="60">
                           <a:s>Value</a:s>
                        </a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="62" locator="32:2-32:93" xsi:type="DateTime">
            <year localId="51" locator="32:11-32:25" precision="Year" xsi:type="DateTimeComponentFrom">
               <operand localId="50" locator="32:21-32:25" name="Value" xsi:type="OperandRef"/>
            </year>
            <month localId="53" locator="32:28-32:43" precision="Month" xsi:type="DateTimeComponentFrom">
               <operand localId="52" locator="32:39-32:43" name="Value" xsi:type="OperandRef"/>
            </month>
            <day localId="55" locator="32:46-32:59" precision="Day" xsi:type="DateTimeComponentFrom">
               <operand localId="54" locator="32:55-32:59" name="Value" xsi:type="OperandRef"/>
            </day>
            <hour localId="56" locator="32:62" valueType="t:Integer" value="0" xsi:type="Literal"/>
            <minute localId="57" locator="32:65" valueType="t:Integer" value="0" xsi:type="Literal"/>
            <second localId="58" locator="32:68" valueType="t:Integer" value="0" xsi:type="Literal"/>
            <millisecond localId="59" locator="32:71" valueType="t:Integer" value="0" xsi:type="Literal"/>
            <timezoneOffset localId="61" locator="32:74-32:92" xsi:type="TimezoneFrom">
               <operand localId="60" locator="32:88-32:92" name="Value" xsi:type="OperandRef"/>
            </timezoneOffset>
         </expression>
         <operand name="Value">
            <operandTypeSpecifier localId="49" locator="31:32-31:39" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="71" locator="34:1-35:51" name="CalendarAgeInDaysAt" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="71">
               <a:s>define function &quot;CalendarAgeInDaysAt&quot;(BirthDateTime </a:s>
               <a:s r="64">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>, AsOf </a:s>
               <a:s r="65">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="70">
                  <a:s r="70">
                     <a:s>days between </a:s>
                     <a:s r="67">
                        <a:s>ToDate(</a:s>
                        <a:s r="66">
                           <a:s>BirthDateTime</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>and </a:s>
                     <a:s r="69">
                        <a:s>ToDate(</a:s>
                        <a:s r="68">
                           <a:s>AsOf</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="70" locator="35:2-35:51" precision="Day" xsi:type="DurationBetween">
            <operand localId="67" locator="35:15-35:35" name="ToDate" xsi:type="FunctionRef">
               <operand localId="66" locator="35:22-35:34" name="BirthDateTime" xsi:type="OperandRef"/>
            </operand>
            <operand localId="69" locator="35:40-35:51" name="ToDate" xsi:type="FunctionRef">
               <operand localId="68" locator="35:47-35:50" name="AsOf" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="64" locator="34:53-34:60" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="AsOf">
            <operandTypeSpecifier localId="65" locator="34:68-34:75" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="76" locator="37:1-38:44" name="CalendarAgeInDays" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="76">
               <a:s>define function &quot;CalendarAgeInDays&quot;(BirthDateTime </a:s>
               <a:s r="72">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="75">
                  <a:s r="75">
                     <a:s>CalendarAgeInDaysAt(</a:s>
                     <a:s r="73">
                        <a:s>BirthDateTime</a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s r="74">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="75" locator="38:2-38:44" name="CalendarAgeInDaysAt" xsi:type="FunctionRef">
            <operand localId="73" locator="38:22-38:34" name="BirthDateTime" xsi:type="OperandRef"/>
            <operand xsi:type="ToDateTime">
               <operand localId="74" locator="38:37-38:43" xsi:type="Today"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="72" locator="37:51-37:58" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="84" locator="40:1-41:53" name="CalendarAgeInMonthsAt" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="84">
               <a:s>define function &quot;CalendarAgeInMonthsAt&quot;(BirthDateTime </a:s>
               <a:s r="77">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>, AsOf </a:s>
               <a:s r="78">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="83">
                  <a:s r="83">
                     <a:s>months between </a:s>
                     <a:s r="80">
                        <a:s>ToDate(</a:s>
                        <a:s r="79">
                           <a:s>BirthDateTime</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>and </a:s>
                     <a:s r="82">
                        <a:s>ToDate(</a:s>
                        <a:s r="81">
                           <a:s>AsOf</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="83" locator="41:2-41:53" precision="Month" xsi:type="DurationBetween">
            <operand localId="80" locator="41:17-41:37" name="ToDate" xsi:type="FunctionRef">
               <operand localId="79" locator="41:24-41:36" name="BirthDateTime" xsi:type="OperandRef"/>
            </operand>
            <operand localId="82" locator="41:42-41:53" name="ToDate" xsi:type="FunctionRef">
               <operand localId="81" locator="41:49-41:52" name="AsOf" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="77" locator="40:55-40:62" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="AsOf">
            <operandTypeSpecifier localId="78" locator="40:70-40:77" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="89" locator="43:1-44:46" name="CalendarAgeInMonths" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="89">
               <a:s>define function &quot;CalendarAgeInMonths&quot;(BirthDateTime </a:s>
               <a:s r="85">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="88">
                  <a:s r="88">
                     <a:s>CalendarAgeInMonthsAt(</a:s>
                     <a:s r="86">
                        <a:s>BirthDateTime</a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s r="87">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="88" locator="44:2-44:46" name="CalendarAgeInMonthsAt" xsi:type="FunctionRef">
            <operand localId="86" locator="44:24-44:36" name="BirthDateTime" xsi:type="OperandRef"/>
            <operand xsi:type="ToDateTime">
               <operand localId="87" locator="44:39-44:45" xsi:type="Today"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="85" locator="43:53-43:60" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="97" locator="46:1-47:52" name="CalendarAgeInYearsAt" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="97">
               <a:s>define function &quot;CalendarAgeInYearsAt&quot;(BirthDateTime </a:s>
               <a:s r="90">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>, AsOf </a:s>
               <a:s r="91">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="96">
                  <a:s r="96">
                     <a:s>years between </a:s>
                     <a:s r="93">
                        <a:s>ToDate(</a:s>
                        <a:s r="92">
                           <a:s>BirthDateTime</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>and </a:s>
                     <a:s r="95">
                        <a:s>ToDate(</a:s>
                        <a:s r="94">
                           <a:s>AsOf</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="96" locator="47:2-47:52" precision="Year" xsi:type="DurationBetween">
            <operand localId="93" locator="47:16-47:36" name="ToDate" xsi:type="FunctionRef">
               <operand localId="92" locator="47:23-47:35" name="BirthDateTime" xsi:type="OperandRef"/>
            </operand>
            <operand localId="95" locator="47:41-47:52" name="ToDate" xsi:type="FunctionRef">
               <operand localId="94" locator="47:48-47:51" name="AsOf" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="90" locator="46:54-46:61" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
         <operand name="AsOf">
            <operandTypeSpecifier localId="91" locator="46:69-46:76" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="102" locator="49:1-50:45" name="CalendarAgeInYears" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="102">
               <a:s>define function &quot;CalendarAgeInYears&quot;(BirthDateTime </a:s>
               <a:s r="98">
                  <a:s>DateTime</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="101">
                  <a:s r="101">
                     <a:s>CalendarAgeInYearsAt(</a:s>
                     <a:s r="99">
                        <a:s>BirthDateTime</a:s>
                     </a:s>
                     <a:s>, </a:s>
                     <a:s r="100">
                        <a:s>Today()</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="101" locator="50:2-50:45" name="CalendarAgeInYearsAt" xsi:type="FunctionRef">
            <operand localId="99" locator="50:23-50:35" name="BirthDateTime" xsi:type="OperandRef"/>
            <operand xsi:type="ToDateTime">
               <operand localId="100" locator="50:38-50:44" xsi:type="Today"/>
            </operand>
         </expression>
         <operand name="BirthDateTime">
            <operandTypeSpecifier localId="98" locator="49:52-49:59" name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="125" locator="55:1-60:5" name="ED Visit" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="125">
               <a:s>define function &quot;ED Visit&quot;(TheEncounter </a:s>
               <a:s r="106">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
    </a:s>
               <a:s r="124">
                  <a:s r="124">
                     <a:s>singleton from </a:s>
                     <a:s r="123">
                        <a:s>(&#xd;
        </a:s>
                        <a:s r="123">
                           <a:s>
                              <a:s r="108">
                                 <a:s r="107">
                                    <a:s r="107">
                                       <a:s>[Encounter: </a:s>
                                       <a:s>
                                          <a:s>&quot;Emergency Department Visit&quot;</a:s>
                                       </a:s>
                                       <a:s>]</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> EDVisit</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
            </a:s>
                           <a:s r="122">
                              <a:s>where </a:s>
                              <a:s r="122">
                                 <a:s r="112">
                                    <a:s r="110">
                                       <a:s r="109">
                                          <a:s>EDVisit</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="110">
                                          <a:s>status</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> = </a:s>
                                    <a:s r="111">
                                       <a:s>'finished'</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
                and </a:s>
                                 <a:s r="121">
                                    <a:s r="114">
                                       <a:s r="113">
                                          <a:s>EDVisit</a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="114">
                                          <a:s>period</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s> </a:s>
                                    <a:s r="121">
                                       <a:s>ends </a:s>
                                       <a:s r="120">
                                          <a:s>1 hour</a:s>
                                       </a:s>
                                       <a:s> or less on or before</a:s>
                                    </a:s>
                                    <a:s> </a:s>
                                    <a:s r="119">
                                       <a:s>start of </a:s>
                                       <a:s r="118">
                                          <a:s r="115">
                                             <a:s>FHIRHelpers</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="118">
                                             <a:s>ToInterval(</a:s>
                                             <a:s r="117">
                                                <a:s r="116">
                                                   <a:s>TheEncounter</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="117">
                                                   <a:s>period</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s>)</a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                        <a:s>&#xd;
    )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="124" locator="56:5-60:5" xsi:type="SingletonFrom">
            <operand localId="123" locator="56:20-60:5" xsi:type="Query">
               <source localId="108" locator="57:9-57:57" alias="EDVisit">
                  <expression localId="107" locator="57:9-57:49" dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                     <codes name="Emergency Department Visit" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where localId="122" locator="58:13-59:120" xsi:type="And">
                  <operand localId="112" locator="58:19-58:45" xsi:type="Equal">
                     <operand name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="110" locator="58:19-58:32" path="status" scope="EDVisit" xsi:type="Property"/>
                     </operand>
                     <operand localId="111" locator="58:36-58:45" valueType="t:String" value="finished" xsi:type="Literal"/>
                  </operand>
                  <operand localId="121" locator="59:21-59:120" xsi:type="In">
                     <operand locator="59:36-59:39" xsi:type="End">
                        <operand name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="114" locator="59:21-59:34" path="period" scope="EDVisit" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand locator="59:41-59:54" lowClosed="true" highClosed="true" xsi:type="Interval">
                        <low locator="59:69-59:120" xsi:type="Subtract">
                           <operand localId="119" locator="59:69-59:120" xsi:type="Start">
                              <operand localId="118" locator="59:78-59:120" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                 <operand localId="117" locator="59:101-59:119" path="period" xsi:type="Property">
                                    <source localId="116" locator="59:101-59:112" name="TheEncounter" xsi:type="OperandRef"/>
                                 </operand>
                              </operand>
                           </operand>
                           <operand localId="120" locator="59:41-59:46" value="1" unit="hour" xsi:type="Quantity"/>
                        </low>
                        <high localId="119" locator="59:69-59:120" xsi:type="Start">
                           <operand localId="118" locator="59:78-59:120" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <operand localId="117" locator="59:101-59:119" path="period" xsi:type="Property">
                                 <source localId="116" locator="59:101-59:112" name="TheEncounter" xsi:type="OperandRef"/>
                              </operand>
                           </operand>
                        </high>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="106" locator="55:41-55:54" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="148" locator="62:1-66:116" name="Hospitalization" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="148">
               <a:s>define function &quot;Hospitalization&quot;(TheEncounter </a:s>
               <a:s r="126">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="147">
                  <a:s r="147">
                     <a:s>
                        <a:s r="129">
                           <a:s r="128">
                              <a:s>( </a:s>
                              <a:s r="128">
                                 <a:s>&quot;ED Visit&quot;(</a:s>
                                 <a:s r="127">
                                    <a:s>TheEncounter</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s> )</a:s>
                           </a:s>
                           <a:s> X</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    </a:s>
                     <a:s r="146">
                        <a:s>return&#xd;
        </a:s>
                        <a:s r="145">
                           <a:s>if </a:s>
                           <a:s r="131">
                              <a:s r="130">
                                 <a:s>X</a:s>
                              </a:s>
                              <a:s> is null</a:s>
                           </a:s>
                           <a:s> then </a:s>
                           <a:s r="133">
                              <a:s r="132">
                                 <a:s>TheEncounter</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="133">
                                 <a:s>period</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
        else </a:s>
                           <a:s r="144">
                              <a:s>Interval[</a:s>
                              <a:s r="138">
                                 <a:s>start of </a:s>
                                 <a:s r="137">
                                    <a:s r="134">
                                       <a:s>FHIRHelpers</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="137">
                                       <a:s>ToInterval(</a:s>
                                       <a:s r="136">
                                          <a:s r="135">
                                             <a:s>X</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="136">
                                             <a:s>period</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>, </a:s>
                              <a:s r="143">
                                 <a:s>end of </a:s>
                                 <a:s r="142">
                                    <a:s r="139">
                                       <a:s>FHIRHelpers</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="142">
                                       <a:s>ToInterval(</a:s>
                                       <a:s r="141">
                                          <a:s r="140">
                                             <a:s>TheEncounter</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="141">
                                             <a:s>period</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>)</a:s>
                                    </a:s>
                                 </a:s>
                              </a:s>
                              <a:s>]</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="147" locator="63:2-66:116" xsi:type="Query">
            <source localId="129" locator="63:2-63:31" alias="X">
               <expression localId="128" locator="63:2-63:29" name="ED Visit" xsi:type="FunctionRef">
                  <operand localId="127" locator="63:15-63:26" name="TheEncounter" xsi:type="OperandRef"/>
               </expression>
            </source>
            <return localId="146" locator="64:5-66:116">
               <expression localId="145" locator="65:9-66:116" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="131" locator="65:12-65:20" xsi:type="IsNull">
                        <operand localId="130" locator="65:12" name="X" xsi:type="AliasRef"/>
                     </operand>
                  </condition>
                  <then name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                     <operand localId="133" locator="65:27-65:45" path="period" xsi:type="Property">
                        <source localId="132" locator="65:27-65:38" name="TheEncounter" xsi:type="OperandRef"/>
                     </operand>
                  </then>
                  <else localId="144" locator="66:14-66:116" lowClosed="true" highClosed="true" xsi:type="Interval">
                     <low localId="138" locator="66:23-66:63" xsi:type="Start">
                        <operand localId="137" locator="66:32-66:63" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="136" locator="66:55-66:62" path="period" scope="X" xsi:type="Property"/>
                        </operand>
                     </low>
                     <high localId="143" locator="66:66-66:115" xsi:type="End">
                        <operand localId="142" locator="66:73-66:115" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="141" locator="66:96-66:114" path="period" xsi:type="Property">
                              <source localId="140" locator="66:96-66:107" name="TheEncounter" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                     </high>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="126" locator="62:48-62:61" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="166" locator="68:1-72:68" name="Hospitalization Locations" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="166">
               <a:s>define function &quot;Hospitalization Locations&quot;(TheEncounter </a:s>
               <a:s r="149">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="165">
                  <a:s r="165">
                     <a:s>
                        <a:s r="152">
                           <a:s r="151">
                              <a:s>( </a:s>
                              <a:s r="151">
                                 <a:s>&quot;ED Visit&quot;(</a:s>
                                 <a:s r="150">
                                    <a:s>TheEncounter</a:s>
                                 </a:s>
                                 <a:s>)</a:s>
                              </a:s>
                              <a:s> )</a:s>
                           </a:s>
                           <a:s> EDEncounter</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    </a:s>
                     <a:s r="164">
                        <a:s>return&#xd;
        </a:s>
                        <a:s r="163">
                           <a:s>if </a:s>
                           <a:s r="154">
                              <a:s r="153">
                                 <a:s>EDEncounter</a:s>
                              </a:s>
                              <a:s> is null</a:s>
                           </a:s>
                           <a:s> then </a:s>
                           <a:s r="156">
                              <a:s r="155">
                                 <a:s>TheEncounter</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="156">
                                 <a:s>location</a:s>
                              </a:s>
                           </a:s>
                           <a:s>&#xd;
        else </a:s>
                           <a:s r="162">
                              <a:s>flatten </a:s>
                              <a:s r="161">
                                 <a:s>{ </a:s>
                                 <a:s r="158">
                                    <a:s r="157">
                                       <a:s>EDEncounter</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="158">
                                       <a:s>location</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>, </a:s>
                                 <a:s r="160">
                                    <a:s r="159">
                                       <a:s>TheEncounter</a:s>
                                    </a:s>
                                    <a:s>.</a:s>
                                    <a:s r="160">
                                       <a:s>location</a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s> }</a:s>
                              </a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="165" locator="69:2-72:68" xsi:type="Query">
            <source localId="152" locator="69:2-69:41" alias="EDEncounter">
               <expression localId="151" locator="69:2-69:29" name="ED Visit" xsi:type="FunctionRef">
                  <operand localId="150" locator="69:15-69:26" name="TheEncounter" xsi:type="OperandRef"/>
               </expression>
            </source>
            <return localId="164" locator="70:5-72:68">
               <expression localId="163" locator="71:9-72:68" xsi:type="If">
                  <condition asType="t:Boolean" xsi:type="As">
                     <operand localId="154" locator="71:12-71:30" xsi:type="IsNull">
                        <operand localId="153" locator="71:12-71:22" name="EDEncounter" xsi:type="AliasRef"/>
                     </operand>
                  </condition>
                  <then localId="156" locator="71:37-71:57" path="location" xsi:type="Property">
                     <source localId="155" locator="71:37-71:48" name="TheEncounter" xsi:type="OperandRef"/>
                  </then>
                  <else localId="162" locator="72:14-72:68" xsi:type="Flatten">
                     <operand localId="161" locator="72:22-72:68" xsi:type="List">
                        <element localId="158" locator="72:24-72:43" path="location" scope="EDEncounter" xsi:type="Property"/>
                        <element localId="160" locator="72:46-72:66" path="location" xsi:type="Property">
                           <source localId="159" locator="72:46-72:57" name="TheEncounter" xsi:type="OperandRef"/>
                        </element>
                     </operand>
                  </else>
               </expression>
            </return>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="149" locator="68:58-68:71" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="171" locator="74:1-75:46" name="Hospitalization Length of Stay" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="171">
               <a:s>define function &quot;Hospitalization Length of Stay&quot;(TheEncounter </a:s>
               <a:s r="167">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="170">
                  <a:s r="170">
                     <a:s>LengthInDays(</a:s>
                     <a:s r="169">
                        <a:s>&quot;Hospitalization&quot;(</a:s>
                        <a:s r="168">
                           <a:s>TheEncounter</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="170" locator="75:2-75:46" name="LengthInDays" xsi:type="FunctionRef">
            <operand localId="169" locator="75:15-75:45" name="Hospitalization" xsi:type="FunctionRef">
               <operand localId="168" locator="75:33-75:44" name="TheEncounter" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="167" locator="74:63-74:76" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="176" locator="77:1-78:41" name="Hospital Admission Time" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="176">
               <a:s>define function &quot;Hospital Admission Time&quot;(TheEncounter </a:s>
               <a:s r="172">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="175">
                  <a:s r="175">
                     <a:s>start of </a:s>
                     <a:s r="174">
                        <a:s>&quot;Hospitalization&quot;(</a:s>
                        <a:s r="173">
                           <a:s>TheEncounter</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="175" locator="78:2-78:41" xsi:type="Start">
            <operand localId="174" locator="78:11-78:41" name="Hospitalization" xsi:type="FunctionRef">
               <operand localId="173" locator="78:29-78:40" name="TheEncounter" xsi:type="OperandRef"/>
            </operand>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="172" locator="77:56-77:69" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="183" locator="80:1-81:51" name="Hospital Discharge Time" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="183">
               <a:s>define function &quot;Hospital Discharge Time&quot;(TheEncounter </a:s>
               <a:s r="177">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="182">
                  <a:s r="182">
                     <a:s>end of </a:s>
                     <a:s r="181">
                        <a:s r="178">
                           <a:s>FHIRHelpers</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="181">
                           <a:s>ToInterval(</a:s>
                           <a:s r="180">
                              <a:s r="179">
                                 <a:s>TheEncounter</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="180">
                                 <a:s>period</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="182" locator="81:2-81:51" xsi:type="End">
            <operand localId="181" locator="81:9-81:51" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
               <operand localId="180" locator="81:32-81:50" path="period" xsi:type="Property">
                  <source localId="179" locator="81:32-81:43" name="TheEncounter" xsi:type="OperandRef"/>
               </operand>
            </operand>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="177" locator="80:56-80:69" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="200" locator="83:1-87:10" name="Hospital Arrival Time" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="200">
               <a:s>define function &quot;Hospital Arrival Time&quot;(TheEncounter </a:s>
               <a:s r="184">
                  <a:s>FHIR.Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="199">
                  <a:s r="199">
                     <a:s>start of </a:s>
                     <a:s r="198">
                        <a:s r="185">
                           <a:s>FHIRHelpers</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="198">
                           <a:s>ToInterval(</a:s>
                           <a:s r="197">
                              <a:s r="196">
                                 <a:s>First(&#xd;
	    </a:s>
                                 <a:s r="195">
                                    <a:s>
                                       <a:s r="188">
                                          <a:s r="187">
                                             <a:s>( </a:s>
                                             <a:s r="187">
                                                <a:s>&quot;Hospitalization Locations&quot;(</a:s>
                                                <a:s r="186">
                                                   <a:s>TheEncounter</a:s>
                                                </a:s>
                                                <a:s>)</a:s>
                                             </a:s>
                                             <a:s> )</a:s>
                                          </a:s>
                                          <a:s> HospitalLocation</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>&#xd;
			</a:s>
                                    <a:s r="194">
                                       <a:s>sort by </a:s>
                                       <a:s r="193">
                                          <a:s r="192">
                                             <a:s>start of </a:s>
                                             <a:s r="191">
                                                <a:s r="189">
                                                   <a:s>FHIRHelpers</a:s>
                                                </a:s>
                                                <a:s>.</a:s>
                                                <a:s r="191">
                                                   <a:s>ToInterval(</a:s>
                                                   <a:s r="190">
                                                      <a:s>period</a:s>
                                                   </a:s>
                                                   <a:s>)</a:s>
                                                </a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                 </a:s>
                                 <a:s>&#xd;
	)</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="197">
                                 <a:s>period</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="199" locator="84:2-87:10" xsi:type="Start">
            <operand localId="198" locator="84:11-87:10" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
               <operand localId="197" locator="84:34-87:9" path="period" xsi:type="Property">
                  <source localId="196" locator="84:34-87:2" xsi:type="First">
                     <source localId="195" locator="85:6-86:50" xsi:type="Query">
                        <source localId="188" locator="85:6-85:67" alias="HospitalLocation">
                           <expression localId="187" locator="85:6-85:50" name="Hospitalization Locations" xsi:type="FunctionRef">
                              <operand localId="186" locator="85:36-85:47" name="TheEncounter" xsi:type="OperandRef"/>
                           </expression>
                        </source>
                        <sort localId="194" locator="86:4-86:50">
                           <by localId="193" locator="86:12-86:50" direction="asc" xsi:type="ByExpression">
                              <expression localId="192" locator="86:12-86:50" xsi:type="Start">
                                 <operand localId="191" locator="86:21-86:50" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                                    <operand localId="190" locator="86:44-86:49" name="period" xsi:type="IdentifierRef"/>
                                 </operand>
                              </expression>
                           </by>
                        </sort>
                     </source>
                  </source>
               </operand>
            </operand>
         </expression>
         <operand name="TheEncounter">
            <operandTypeSpecifier localId="184" locator="83:54-83:67" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="226" locator="121:1-124:10" name="Normalize Onset" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="226">
               <a:s>define function &quot;Normalize Onset&quot;(onset </a:s>
               <a:s r="206">
                  <a:s>Choice&lt;</a:s>
                  <a:s r="201">
                     <a:s>FHIR.dateTime</a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="202">
                     <a:s>FHIR.Age</a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="203">
                     <a:s>FHIR.Period</a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="204">
                     <a:s>FHIR.Range</a:s>
                  </a:s>
                  <a:s>, </a:s>
                  <a:s r="205">
                     <a:s>FHIR.string</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):&#xd;
  </a:s>
               <a:s r="225">
                  <a:s r="225">
                     <a:s>if </a:s>
                     <a:s r="209">
                        <a:s r="207">
                           <a:s>onset</a:s>
                        </a:s>
                        <a:s> is </a:s>
                        <a:s r="208">
                           <a:s>FHIR.dateTime</a:s>
                        </a:s>
                     </a:s>
                     <a:s> then </a:s>
                     <a:s r="214">
                        <a:s>Interval[</a:s>
                        <a:s r="211">
                           <a:s r="210">
                              <a:s>onset</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="211">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="213">
                           <a:s r="212">
                              <a:s>onset</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="213">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                     <a:s>&#xd;
	else </a:s>
                     <a:s r="224">
                        <a:s>if </a:s>
                        <a:s r="217">
                           <a:s r="215">
                              <a:s>onset</a:s>
                           </a:s>
                           <a:s> is </a:s>
                           <a:s r="216">
                              <a:s>FHIR.Period</a:s>
                           </a:s>
                        </a:s>
                        <a:s> then </a:s>
                        <a:s r="222">
                           <a:s r="218">
                              <a:s>FHIRHelpers</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="222">
                              <a:s>ToInterval(</a:s>
                              <a:s r="221">
                                 <a:s r="219">
                                    <a:s>onset</a:s>
                                 </a:s>
                                 <a:s> as </a:s>
                                 <a:s r="220">
                                    <a:s>FHIR.Period</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                        <a:s r="223">&#xd;
	else null</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="225" locator="122:3-124:10" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="209" locator="122:6-122:27" xsi:type="Is">
                  <operand localId="207" locator="122:6-122:10" name="onset" xsi:type="OperandRef"/>
                  <isTypeSpecifier localId="208" locator="122:15-122:27" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               </operand>
            </condition>
            <then localId="214" locator="122:34-122:67" lowClosed="true" highClosed="true" xsi:type="Interval">
               <low localId="211" locator="122:43-122:53" path="value" xsi:type="Property">
                  <source localId="210" locator="122:43-122:47" name="onset" xsi:type="OperandRef"/>
               </low>
               <high localId="213" locator="122:56-122:66" path="value" xsi:type="Property">
                  <source localId="212" locator="122:56-122:60" name="onset" xsi:type="OperandRef"/>
               </high>
            </then>
            <else xsi:type="Interval">
               <low xsi:type="As">
                  <operand path="low" xsi:type="Property">
                     <source localId="224" locator="123:7-124:10" xsi:type="If">
                        <condition asType="t:Boolean" xsi:type="As">
                           <operand localId="217" locator="123:10-123:29" xsi:type="Is">
                              <operand localId="215" locator="123:10-123:14" name="onset" xsi:type="OperandRef"/>
                              <isTypeSpecifier localId="216" locator="123:19-123:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </condition>
                        <then localId="222" locator="123:36-123:79" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="221" locator="123:59-123:78" strict="false" xsi:type="As">
                              <operand localId="219" locator="123:59-123:63" name="onset" xsi:type="OperandRef"/>
                              <asTypeSpecifier localId="220" locator="123:68-123:78" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </then>
                        <else xsi:type="As">
                           <operand localId="223" locator="124:7-124:10" xsi:type="Null"/>
                           <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </asTypeSpecifier>
                        </else>
                     </source>
                  </operand>
                  <asTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <choice name="fhir:decimal" xsi:type="NamedTypeSpecifier"/>
                     <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </asTypeSpecifier>
               </low>
               <lowClosedExpression path="lowClosed" xsi:type="Property">
                  <source localId="224" locator="123:7-124:10" xsi:type="If">
                     <condition asType="t:Boolean" xsi:type="As">
                        <operand localId="217" locator="123:10-123:29" xsi:type="Is">
                           <operand localId="215" locator="123:10-123:14" name="onset" xsi:type="OperandRef"/>
                           <isTypeSpecifier localId="216" locator="123:19-123:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </condition>
                     <then localId="222" locator="123:36-123:79" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="221" locator="123:59-123:78" strict="false" xsi:type="As">
                           <operand localId="219" locator="123:59-123:63" name="onset" xsi:type="OperandRef"/>
                           <asTypeSpecifier localId="220" locator="123:68-123:78" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </then>
                     <else xsi:type="As">
                        <operand localId="223" locator="124:7-124:10" xsi:type="Null"/>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </else>
                  </source>
               </lowClosedExpression>
               <high xsi:type="As">
                  <operand path="high" xsi:type="Property">
                     <source localId="224" locator="123:7-124:10" xsi:type="If">
                        <condition asType="t:Boolean" xsi:type="As">
                           <operand localId="217" locator="123:10-123:29" xsi:type="Is">
                              <operand localId="215" locator="123:10-123:14" name="onset" xsi:type="OperandRef"/>
                              <isTypeSpecifier localId="216" locator="123:19-123:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </condition>
                        <then localId="222" locator="123:36-123:79" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                           <operand localId="221" locator="123:59-123:78" strict="false" xsi:type="As">
                              <operand localId="219" locator="123:59-123:63" name="onset" xsi:type="OperandRef"/>
                              <asTypeSpecifier localId="220" locator="123:68-123:78" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                           </operand>
                        </then>
                        <else xsi:type="As">
                           <operand localId="223" locator="124:7-124:10" xsi:type="Null"/>
                           <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                              <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                           </asTypeSpecifier>
                        </else>
                     </source>
                  </operand>
                  <asTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                     <choice name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                     <choice name="fhir:decimal" xsi:type="NamedTypeSpecifier"/>
                     <choice name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </asTypeSpecifier>
               </high>
               <highClosedExpression path="highClosed" xsi:type="Property">
                  <source localId="224" locator="123:7-124:10" xsi:type="If">
                     <condition asType="t:Boolean" xsi:type="As">
                        <operand localId="217" locator="123:10-123:29" xsi:type="Is">
                           <operand localId="215" locator="123:10-123:14" name="onset" xsi:type="OperandRef"/>
                           <isTypeSpecifier localId="216" locator="123:19-123:29" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </condition>
                     <then localId="222" locator="123:36-123:79" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="221" locator="123:59-123:78" strict="false" xsi:type="As">
                           <operand localId="219" locator="123:59-123:63" name="onset" xsi:type="OperandRef"/>
                           <asTypeSpecifier localId="220" locator="123:68-123:78" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
                        </operand>
                     </then>
                     <else xsi:type="As">
                        <operand localId="223" locator="124:7-124:10" xsi:type="Null"/>
                        <asTypeSpecifier xsi:type="IntervalTypeSpecifier">
                           <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
                        </asTypeSpecifier>
                     </else>
                  </source>
               </highClosedExpression>
            </else>
         </expression>
         <operand name="onset">
            <operandTypeSpecifier localId="206" locator="121:41-121:109" xsi:type="ChoiceTypeSpecifier">
               <choice localId="201" locator="121:48-121:60" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               <choice localId="202" locator="121:63-121:70" name="fhir:Age" xsi:type="NamedTypeSpecifier"/>
               <choice localId="203" locator="121:73-121:83" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
               <choice localId="204" locator="121:86-121:95" name="fhir:Range" xsi:type="NamedTypeSpecifier"/>
               <choice localId="205" locator="121:98-121:108" name="fhir:string" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="244" locator="126:1-128:54" name="Get Choice Interval - dateTime or Period" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="244">
               <a:s>define function &quot;Get Choice Interval - dateTime or Period&quot;(performed </a:s>
               <a:s r="229">
                  <a:s>Choice&lt;</a:s>
                  <a:s r="227">
                     <a:s>FHIR.dateTime</a:s>
                  </a:s>
                  <a:s>,</a:s>
                  <a:s r="228">
                     <a:s>FHIR.Period</a:s>
                  </a:s>
                  <a:s>></a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="243">
                  <a:s r="243">
                     <a:s>if </a:s>
                     <a:s r="232">
                        <a:s r="230">
                           <a:s>performed</a:s>
                        </a:s>
                        <a:s> is </a:s>
                        <a:s r="231">
                           <a:s>FHIR.dateTime</a:s>
                        </a:s>
                     </a:s>
                     <a:s> then </a:s>
                     <a:s r="237">
                        <a:s>Interval[</a:s>
                        <a:s r="234">
                           <a:s r="233">
                              <a:s>performed</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="234">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="236">
                           <a:s r="235">
                              <a:s>performed</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="236">
                              <a:s>value</a:s>
                           </a:s>
                        </a:s>
                        <a:s>]</a:s>
                     </a:s>
                     <a:s>&#xd;
	else </a:s>
                     <a:s r="242">
                        <a:s r="238">
                           <a:s>FHIRHelpers</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="242">
                           <a:s>ToInterval(</a:s>
                           <a:s r="241">
                              <a:s r="239">
                                 <a:s>performed</a:s>
                              </a:s>
                              <a:s> as </a:s>
                              <a:s r="240">
                                 <a:s>FHIR.Period</a:s>
                              </a:s>
                           </a:s>
                           <a:s>)</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="243" locator="127:2-128:54" xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand localId="232" locator="127:5-127:30" xsi:type="Is">
                  <operand localId="230" locator="127:5-127:13" name="performed" xsi:type="OperandRef"/>
                  <isTypeSpecifier localId="231" locator="127:18-127:30" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               </operand>
            </condition>
            <then localId="237" locator="127:37-127:78" lowClosed="true" highClosed="true" xsi:type="Interval">
               <low localId="234" locator="127:46-127:60" path="value" xsi:type="Property">
                  <source localId="233" locator="127:46-127:54" name="performed" xsi:type="OperandRef"/>
               </low>
               <high localId="236" locator="127:63-127:77" path="value" xsi:type="Property">
                  <source localId="235" locator="127:63-127:71" name="performed" xsi:type="OperandRef"/>
               </high>
            </then>
            <else localId="242" locator="128:7-128:54" name="ToInterval" libraryName="FHIRHelpers" xsi:type="FunctionRef">
               <operand localId="241" locator="128:30-128:53" strict="false" xsi:type="As">
                  <operand localId="239" locator="128:30-128:38" name="performed" xsi:type="OperandRef"/>
                  <asTypeSpecifier localId="240" locator="128:43-128:53" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
               </operand>
            </else>
         </expression>
         <operand name="performed">
            <operandTypeSpecifier localId="229" locator="126:70-126:102" xsi:type="ChoiceTypeSpecifier">
               <choice localId="227" locator="126:77-126:89" name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               <choice localId="228" locator="126:91-126:101" name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def localId="250" locator="130:1-131:22" name="GetId" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="250">
               <a:s>define function &quot;GetId&quot;(uri </a:s>
               <a:s r="245">
                  <a:s>String</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="249">
                  <a:s r="249">
                     <a:s>Last(</a:s>
                     <a:s r="248">
                        <a:s>Split(</a:s>
                        <a:s r="246">
                           <a:s>uri</a:s>
                        </a:s>
                        <a:s>, </a:s>
                        <a:s r="247">
                           <a:s>'/'</a:s>
                        </a:s>
                        <a:s>)</a:s>
                     </a:s>
                     <a:s>)</a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="249" locator="131:2-131:22" xsi:type="Last">
            <source localId="248" locator="131:7-131:21" xsi:type="Split">
               <stringToSplit localId="246" locator="131:13-131:15" name="uri" xsi:type="OperandRef"/>
               <separator localId="247" locator="131:18-131:20" valueType="t:String" value="/" xsi:type="Literal"/>
            </source>
         </expression>
         <operand name="uri">
            <operandTypeSpecifier localId="245" locator="130:29-130:34" name="t:String" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="262" locator="133:1-135:77" name="EncounterDiagnosis" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="262">
               <a:s>define function &quot;EncounterDiagnosis&quot;(Encounter </a:s>
               <a:s r="251">
                  <a:s>Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
  </a:s>
               <a:s r="261">
                  <a:s r="261">
                     <a:s>
                        <a:s r="253">
                           <a:s r="252">
                              <a:s>
                                 <a:s>Encounter.diagnosis</a:s>
                              </a:s>
                           </a:s>
                           <a:s> D</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
    </a:s>
                     <a:s r="260">
                        <a:s>return </a:s>
                        <a:s r="259">
                           <a:s>singleton from </a:s>
                           <a:s r="258">
                              <a:s>(</a:s>
                              <a:s r="258">
                                 <a:s>[Condition: id in </a:s>
                                 <a:s r="257">
                                    <a:s>&quot;GetId&quot;(</a:s>
                                    <a:s r="256">
                                       <a:s r="255">
                                          <a:s r="254">
                                             <a:s>D</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="255">
                                             <a:s>condition</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="256">
                                          <a:s>reference</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>]</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="261" locator="134:3-135:77" xsi:type="Query">
            <source localId="253" locator="134:3-134:23" alias="D">
               <expression localId="252" locator="134:3-134:21" path="diagnosis" xsi:type="Property">
                  <source name="Encounter" xsi:type="OperandRef"/>
               </expression>
            </source>
            <return localId="260" locator="135:5-135:77">
               <expression localId="259" locator="135:12-135:77" xsi:type="SingletonFrom">
                  <operand localId="258" locator="135:27-135:77" dataType="fhir:Condition" codeProperty="id" xsi:type="Retrieve">
                     <codes xsi:type="ToList">
                        <operand localId="257" locator="135:46-135:75" name="GetId" xsi:type="FunctionRef">
                           <operand name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <operand localId="256" locator="135:54-135:74" path="reference" xsi:type="Property">
                                 <source localId="255" locator="135:54-135:64" path="condition" scope="D" xsi:type="Property"/>
                              </operand>
                           </operand>
                        </operand>
                     </codes>
                  </operand>
               </expression>
            </return>
         </expression>
         <operand name="Encounter">
            <operandTypeSpecifier localId="251" locator="133:48-133:56" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="287" locator="138:1-140:76" name="PrincipalDiagnosis" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="287">
               <a:s>define function &quot;PrincipalDiagnosis&quot;(Encounter </a:s>
               <a:s r="263">
                  <a:s>Encounter</a:s>
               </a:s>
               <a:s>):&#xd;
	</a:s>
               <a:s r="286">
                  <a:s r="286">
                     <a:s>
                        <a:s r="278">
                           <a:s r="277">
                              <a:s>(</a:s>
                              <a:s r="277">
                                 <a:s>singleton from </a:s>
                                 <a:s r="276">
                                    <a:s>(</a:s>
                                    <a:s r="276">
                                       <a:s>
                                          <a:s r="265">
                                             <a:s r="264">
                                                <a:s>
                                                   <a:s>Encounter.diagnosis</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> D</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s> </a:s>
                                       <a:s r="275">
                                          <a:s>where </a:s>
                                          <a:s r="275">
                                             <a:s r="270">
                                                <a:s r="267">
                                                   <a:s r="266">
                                                      <a:s>D</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="267">
                                                      <a:s>role</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s> ~ </a:s>
                                                <a:s r="269">
                                                   <a:s>ToConcept(</a:s>
                                                   <a:s r="268">
                                                      <a:s>&quot;Billing&quot;</a:s>
                                                   </a:s>
                                                   <a:s>)</a:s>
                                                </a:s>
                                             </a:s>
                                             <a:s> and </a:s>
                                             <a:s r="274">
                                                <a:s r="272">
                                                   <a:s r="271">
                                                      <a:s>D</a:s>
                                                   </a:s>
                                                   <a:s>.</a:s>
                                                   <a:s r="272">
                                                      <a:s>rank</a:s>
                                                   </a:s>
                                                </a:s>
                                                <a:s r="273"> = 1</a:s>
                                             </a:s>
                                          </a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s> PD</a:s>
                        </a:s>
                     </a:s>
                     <a:s>&#xd;
		</a:s>
                     <a:s r="285">
                        <a:s>return </a:s>
                        <a:s r="284">
                           <a:s>singleton from </a:s>
                           <a:s r="283">
                              <a:s>(</a:s>
                              <a:s r="283">
                                 <a:s>[Condition: id in </a:s>
                                 <a:s r="282">
                                    <a:s>&quot;GetId&quot;(</a:s>
                                    <a:s r="281">
                                       <a:s r="280">
                                          <a:s r="279">
                                             <a:s>PD</a:s>
                                          </a:s>
                                          <a:s>.</a:s>
                                          <a:s r="280">
                                             <a:s>condition</a:s>
                                          </a:s>
                                       </a:s>
                                       <a:s>.</a:s>
                                       <a:s r="281">
                                          <a:s>reference</a:s>
                                       </a:s>
                                    </a:s>
                                    <a:s>)</a:s>
                                 </a:s>
                                 <a:s>]</a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="286" locator="139:2-140:76" xsi:type="Query">
            <source localId="278" locator="139:2-139:95" alias="PD">
               <expression localId="277" locator="139:2-139:92" xsi:type="SingletonFrom">
                  <operand localId="276" locator="139:18-139:91" xsi:type="Query">
                     <source localId="265" locator="139:19-139:39" alias="D">
                        <expression localId="264" locator="139:19-139:37" path="diagnosis" xsi:type="Property">
                           <source name="Encounter" xsi:type="OperandRef"/>
                        </expression>
                     </source>
                     <where localId="275" locator="139:41-139:90" xsi:type="And">
                        <operand localId="270" locator="139:47-139:75" xsi:type="Equivalent">
                           <operand name="ToConcept" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <operand localId="267" locator="139:47-139:52" path="role" scope="D" xsi:type="Property"/>
                           </operand>
                           <operand localId="269" locator="139:56-139:75" xsi:type="ToConcept">
                              <operand localId="268" locator="139:66-139:74" name="Billing" xsi:type="CodeRef"/>
                           </operand>
                        </operand>
                        <operand localId="274" locator="139:81-139:90" xsi:type="Equal">
                           <operand name="ToInteger" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <operand localId="272" locator="139:81-139:86" path="rank" scope="D" xsi:type="Property"/>
                           </operand>
                           <operand localId="273" locator="139:90" valueType="t:Integer" value="1" xsi:type="Literal"/>
                        </operand>
                     </where>
                  </operand>
               </expression>
            </source>
            <return localId="285" locator="140:3-140:76">
               <expression localId="284" locator="140:10-140:76" xsi:type="SingletonFrom">
                  <operand localId="283" locator="140:25-140:76" dataType="fhir:Condition" codeProperty="id" xsi:type="Retrieve">
                     <codes xsi:type="ToList">
                        <operand localId="282" locator="140:44-140:74" name="GetId" xsi:type="FunctionRef">
                           <operand name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                              <operand localId="281" locator="140:52-140:73" path="reference" xsi:type="Property">
                                 <source localId="280" locator="140:52-140:63" path="condition" scope="PD" xsi:type="Property"/>
                              </operand>
                           </operand>
                        </operand>
                     </codes>
                  </operand>
               </expression>
            </return>
         </expression>
         <operand name="Encounter">
            <operandTypeSpecifier localId="263" locator="138:48-138:56" name="fhir:Encounter" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def localId="294" locator="143:1-146:3" name="GetLocation" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <annotation xsi:type="a:Annotation">
            <a:s r="294">
               <a:s>define function GetLocation(reference </a:s>
               <a:s r="288">
                  <a:s>Reference</a:s>
               </a:s>
               <a:s>):&#xd;
  </a:s>
               <a:s r="293">
                  <a:s r="293">
                     <a:s>singleton from </a:s>
                     <a:s r="292">
                        <a:s>(&#xd;
    </a:s>
                        <a:s r="292">
                           <a:s>[Location: id in </a:s>
                           <a:s r="291">
                              <a:s>GetId(</a:s>
                              <a:s r="290">
                                 <a:s r="289">
                                    <a:s>reference</a:s>
                                 </a:s>
                                 <a:s>.</a:s>
                                 <a:s r="290">
                                    <a:s>reference</a:s>
                                 </a:s>
                              </a:s>
                              <a:s>)</a:s>
                           </a:s>
                           <a:s>]</a:s>
                        </a:s>
                        <a:s>&#xd;
  )</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="293" locator="144:3-146:3" xsi:type="SingletonFrom">
            <operand localId="292" locator="144:18-146:3" dataType="fhir:Location" codeProperty="id" xsi:type="Retrieve">
               <codes xsi:type="ToList">
                  <operand localId="291" locator="145:22-145:47" name="GetId" xsi:type="FunctionRef">
                     <operand name="ToString" libraryName="FHIRHelpers" xsi:type="FunctionRef">
                        <operand localId="290" locator="145:28-145:46" path="reference" xsi:type="Property">
                           <source localId="289" locator="145:28-145:36" name="reference" xsi:type="OperandRef"/>
                        </operand>
                     </operand>
                  </operand>
               </codes>
            </operand>
         </expression>
         <operand name="reference">
            <operandTypeSpecifier localId="288" locator="143:39-143:47" name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>


